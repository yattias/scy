<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
    "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>
    <!-- Hibernate SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource"><ref bean="dataSource"/></property>

	    <property name="hibernateProperties">
		    <props>
			    <prop key="hibernate.dialect">org.hibernate.dialect.MySQLInnoDBDialect</prop>

			    <!-- useful for debugging:-->
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>

			    <prop key="hibernate.use_sql_comments">true</prop>
			    <!-- Turn this off to better understand exceptions-->
			    <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>

			    <!-- For performance tuning:-->
			    <prop key="hibernate.generate_statistics">true</prop>

			    <!-- General settings -->
			    <prop key="hibernate.connection.autocommit">false</prop>
			    <prop key="hibernate.connection.release_mode">auto</prop>
			    <prop key="hibernate.cache.use_query_cache">true</prop>
			    <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
                <prop key="hibernate.connection.isolation">2</prop>
			    <prop key="hibernate.max_fetch_depth">1</prop>
			    <prop key="hibernate.jdbc.use_streams_for_binary">true</prop>
			    <!--prop key="hibernate.hbm2ddl.auto">update</prop-->
                <prop key="hbm2ddl.auto">create</prop>
            </props>
	    </property>
	    <property name="schemaUpdate" value="true"/>

	    <property name="lobHandler">
		    <bean class="org.springframework.jdbc.support.lob.DefaultLobHandler"/>
	    </property>


		<property name="configLocation">
			<value>/WEB-INF/hibernate.cfg.xml</value>
		</property>
	</bean>


    <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <!-- BaseDAO: Hibernate implementation -->
    <bean id="baseDAO" class="eu.scy.core.persistence.hibernate.BaseDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <!-- UserDAO: Hibernate implementation -->
    <bean id="userDAO" class="eu.scy.core.persistence.hibernate.UserDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <bean id="roleDAO" class="eu.scy.core.persistence.hibernate.RoleDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <bean id="projectDAO" class="eu.scy.core.persistence.hibernate.ProjectDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <bean id="userSessionDAO" class="eu.scy.core.persistence.hibernate.UserSessionDAOHibernate">
        <property name="sessionFactory"><ref local="sessionFactory"/></property>
    </bean>

    <bean id="eloContainerManager" class="eu.scy.core.service.impl.EloContainerManagerMock">
        <property name="repository" ref="repository"/>
    </bean>



    <!-- ROOLO -->

    <bean name="repository" class="roolo.cms.repository.mock.MockRepository">
        <property name="metadataTypeManager" ref="metadataTypeManager"/>
        <property name="extensionManager" ref="extensionManager"/>
    </bean>

    <bean name="metadataTypeManager" class="roolo.cms.repository.mock.MockMetadataTypeManager">
        <property name="metadataKeys">
            <list>
                <ref bean="uriKey"/>
                <ref bean="titleKey"/>
                <ref bean="formatKey"/>
                <ref bean="dateCreatedKey"/>
                <ref bean="dateLastModifiedKey"/>
                <ref bean="missionKey"/>
                <ref bean="authorKey"/>
                <ref bean="testStringListKey"/>
            </list>
        </property>
    </bean>


    <bean name="uriKey" class="roolo.cms.metadata.keys.UriMetadataKey">
        <constructor-arg index="0" value="uri"/>
        <constructor-arg index="1" value="/lom/general/identifier"/>
        <constructor-arg index="2" value="UNIVERSAL"/>
        <constructor-arg index="3" value="SINGLE"/>
        <constructor-arg index="4" ref="defaultUriValidator"/>
    </bean>
    <bean name="titleKey" class="roolo.cms.metadata.keys.StringMetadataKey">
        <constructor-arg index="0" value="title"/>
        <constructor-arg index="1" value="/lom/general/title"/>
        <constructor-arg index="2" value="SPECIFIC"/>
        <constructor-arg index="3" value="SINGLE"/>
        <constructor-arg index="4" ref="defaultStringValidator"/>
    </bean>
    <bean name="formatKey" class="roolo.cms.metadata.keys.StringMetadataKey">
        <constructor-arg index="0" value="type"/>
        <constructor-arg index="1" value="/lom/technical/format"/>
        <constructor-arg index="2" value="UNIVERSAL"/>
        <constructor-arg index="3" value="SINGLE"/>
        <constructor-arg index="4" ref="defaultStringValidator"/>
    </bean>
    <bean name="dateCreatedKey" class="roolo.cms.metadata.keys.LongMetadataKey">
        <constructor-arg index="0" value="dateCreated"/>
        <constructor-arg index="1" value="/lom/technical/customElements/dateCreated"/>
        <constructor-arg index="2" value="UNIVERSAL"/>
        <constructor-arg index="3" value="SINGLE"/>
        <constructor-arg index="4" ref="defaultLongValidator"/>
    </bean>
    <bean name="dateLastModifiedKey" class="roolo.cms.metadata.keys.LongMetadataKey">
        <constructor-arg index="0" value="dateLastModified"/>
        <constructor-arg index="1" value="/lom/technical/customElements/dateLastModified"/>
        <constructor-arg index="2" value="UNIVERSAL"/>
        <constructor-arg index="3" value="SINGLE"/>
        <constructor-arg index="4" ref="defaultLongValidator"/>
    </bean>
    <bean name="missionKey" class="roolo.cms.metadata.keys.RelationMetadataKey">
        <constructor-arg index="0" value='mission'/>
        <constructor-arg index="1" value='/lom/relation/[kind="isbasedon",type="scy/mission"]'/>
        <constructor-arg index="2" value="UNIVERSAL"/>
        <constructor-arg index="3" value="SINGLE"/>
        <constructor-arg index="4" ref="defaultUriValidator"/>
    </bean>
    <bean name="authorKey" class="roolo.cms.metadata.keys.ContributeMetadataKey">
        <constructor-arg index="0" value='author'/>
        <constructor-arg index="1" value='/lom/lifecycle/contribute/[kind="author"]'/>
        <constructor-arg index="2" value="UNIVERSAL"/>
        <constructor-arg index="3" value="LIST"/>
        <constructor-arg index="4" ref="defaultContributeValidator"/>
    </bean>

    <bean name="testStringListKey" class="roolo.cms.metadata.keys.StringMetadataKey">
        <constructor-arg index="0" value='testStringList'/>
        <constructor-arg index="1" value='/test/list'/>
        <constructor-arg index="2" value="SPECIFIC"/>
        <constructor-arg index="3" value="LIST"/>
        <constructor-arg index="4" ref="defaultStringValidator"/>
    </bean>

    <bean name="defaultStringValidator" class="roolo.cms.metadata.value.validators.StringValidator"></bean>

    <bean name="defaultLongValidator" class="roolo.cms.metadata.value.validators.LongValidator"></bean>

    <bean name="defaultUriValidator" class="roolo.cms.metadata.value.validators.UriValidator"></bean>

    <bean name="defaultContributeValidator" class="roolo.cms.metadata.value.validators.ContributeValidator"></bean>




    <bean name="extensionManager" class="roolo.cms.repository.mock.MockExtensionManager">
		<property name="extensions">
			<map>
				<entry>
					<key>
						<value>scy/drawing</value>
					</key>
					<value>.scydraw</value>
				</entry>
			</map>
		</property>
	</bean>

</beans>