/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OptionGraphPanel.java
 *
 * Created on 25 nov. 2008, 14:55:09
 */

package com.scy.scyDataTool.utilities;

import com.scy.scyDataTool.common.DataHeader;
import com.scy.scyDataTool.common.TypeVisualization;
import com.scy.scyDataTool.dataTool.MainDataToolPanel;

/**
 * panel permettant de choisir les options du graphe : par exemple les colonnes à représenter
 * @author Marjolaine
 */
public class OptionGraphPanel extends javax.swing.JPanel {

    // PROPERTY
    /* owner */
    private MainDataToolPanel owner;
    /* list des colonnes */
    private DataHeader[] listCol;
    /* type de visualisation*/
    private TypeVisualization typeVis;
    /*nom */
    private String name;

    // CONSTRUCTOR
    public OptionGraphPanel(MainDataToolPanel owner, DataHeader[] listCol, TypeVisualization typeVis, String name) {
        super();
        this.owner = owner;
        this.listCol = listCol ;
        this.typeVis = typeVis ;
        this.name = name;
        initComponents();
        init();
    }


    /** Creates new form OptionGraphPanel */
    public OptionGraphPanel() {
        initComponents();
    }

    // METHOD
    private void init(){
        this.labelCol.setText(owner.getBundleString("LABEL_SELECT_COLUMNS"));
        this.labelCol.setSize(ScyUtilities.lenghtOfString(this.labelCol.getText(), getFontMetrics(this.labelCol.getFont())), this.labelCol.getHeight());
        for (int i=0; i<listCol.length; i++){
            if(listCol[i] != null){
                cbColList.addItem(listCol[i].getValue());
                cbColList2.addItem(listCol[i].getValue());
            }
        }
        if (typeVis.getNbColParam() < 2){
            this.remove(this.cbColList2);
            this.labelCol.setText(owner.getBundleString("LABEL_SELECT_COLUMN"));
            this.labelCol.setSize(ScyUtilities.lenghtOfString(this.labelCol.getText(), getFontMetrics(this.labelCol.getFont())), this.labelCol.getHeight());
        }
        revalidate();
        repaint();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelCol = new javax.swing.JLabel();
        cbColList = new javax.swing.JComboBox();
        buttonOk = new javax.swing.JButton();
        cbColList2 = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, owner.getBundleString("LABEL_OPTION"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        setMinimumSize(new java.awt.Dimension(330, 110));
        setLayout(null);

        labelCol.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelCol.setText("jLabel1");
        add(labelCol);
        labelCol.setBounds(10, 30, 120, 14);

        cbColList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbColListItemStateChanged(evt);
            }
        });
        add(cbColList);
        cbColList.setBounds(20, 60, 80, 20);

        buttonOk.setText(owner.getBundleString("BUTTON_OK"));
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });
        add(buttonOk);
        buttonOk.setBounds(20, 100, 99, 23);

        cbColList2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbColList2ItemStateChanged(evt);
            }
        });
        cbColList2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbColList2ActionPerformed(evt);
            }
        });
        add(cbColList2);
        cbColList2.setBounds(190, 60, 80, 20);
    }// </editor-fold>//GEN-END:initComponents

    private void cbColListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbColListItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cbColListItemStateChanged

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        int id = cbColList.getSelectedIndex() ;
        DataHeader dataHeader = listCol[id];
        DataHeader dataHeader2 = null;
        if (typeVis.getNbColParam() ==2){
            int id2 = cbColList2.getSelectedIndex() ;
            dataHeader2 = listCol[id2];
            if (id == id2){
                owner.displayError(new CopexReturn(owner.getBundleString("MSG_ERROR_AXIS"), false), owner.getBundleString("TITLE_DIALOG_ERROR"));
                return ;
            }
        }
        owner.drawGraph(dataHeader, dataHeader2, typeVis, name);
    }//GEN-LAST:event_buttonOkActionPerformed

    private void cbColList2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbColList2ItemStateChanged
        // TODO add your handling code here:
}//GEN-LAST:event_cbColList2ItemStateChanged

    private void cbColList2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbColList2ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_cbColList2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonOk;
    private javax.swing.JComboBox cbColList;
    private javax.swing.JComboBox cbColList2;
    private javax.swing.JLabel labelCol;
    // End of variables declaration//GEN-END:variables

}
