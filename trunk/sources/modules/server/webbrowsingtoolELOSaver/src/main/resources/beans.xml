<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName">

    <bean name="saveEloConfig" class="eu.scy.webbrowsingtoolelosaver.config.BasicConfig">
        <property name="repository" ref="repository"/>
        <property name="extensionManager" ref="extensionManager"/>
        <property name="metadataTypeManager" ref="metadataTypeManager"/>
    </bean>

    <alias name="httpInvokerRepositoryProxy" alias="repository" />
    <alias name="httpInvokerPedagogicalPlanServiceProxy" alias="pedagogicalPlanService" />
    <alias name="httpInvokerMetadataTypeManagerProxy" alias="metadataTypeManager" />
    <alias name="httpInvokerExtensionManagerProxy" alias="extensionManager" />
    <alias name="httpInvokerSessionManagerProxy" alias="sessionManager" />
    <alias name="localEloFactory" alias="eloFactory"/>
    
    <bean name="localEloFactory" class="roolo.elo.JDomBasicELOFactory">
      <constructor-arg index="0" ref="metadataTypeManager"/>
   	</bean>

    <!-- Resolves ${...} placeholders from client.properties -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
            <property name="location">
                    <value>client.properties</value>
            </property>
    </bean>

    <!-- Proxy for the HTTP-invoker-exported repository -->
    <!-- Spring's HTTP invoker uses Java serialization via HTTP  -->
    <bean id="httpInvokerRepositoryProxy"
		class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <property name="serviceUrl">
            <value>
		http://${serverName}:${httpPort}/${contextPath}/remoting/repository-httpinvoker
            </value>
        </property>
        <property name="serviceInterface">
            <value>roolo.api.IRepository</value>
        </property>
    </bean>

	<!-- Proxy for the HTTP-invoker-exported metadata type manager -->
	<!-- Spring's HTTP invoker uses Java serialization via HTTP  -->
    <bean id="httpInvokerMetadataTypeManagerProxy"
		class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <property name="serviceUrl">
            <value>
                    http://${serverName}:${httpPort}/${contextPath}/remoting/metadataTypeManager-httpinvoker
            </value>
        </property>
        <property name="serviceInterface">
            <value>roolo.elo.api.IMetadataTypeManager
            </value>
        </property>
    </bean>

	<!-- Proxy for the HTTP-invoker-exported extension manager -->
	<!-- Spring's HTTP invoker uses Java serialization via HTTP  -->
    <bean id="httpInvokerExtensionManagerProxy"
		class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <property name="serviceUrl">
            <value>
                    http://${serverName}:${httpPort}/${contextPath}/remoting/extensionManager-httpinvoker
            </value>
        </property>
        <property name="serviceInterface">
            <value>roolo.api.IExtensionManager</value>
        </property>
    </bean>

</beans>
