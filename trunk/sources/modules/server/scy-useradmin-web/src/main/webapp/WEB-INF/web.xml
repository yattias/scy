<?xml version="1.0" encoding="UTF-8"?>
<!--
   Copyright 2007 The Apache Software Foundation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->

<web-app xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://java.sun.com/xml/ns/j2ee" version="2.4">
    <display-name>SCY</display-name>

    <context-param>
        <param-name>tapestry.app-package</param-name>
        <param-value>eu.scy.webapp</param-value>
    </context-param>


    <!-- SPRING DEFINITIONS -->

    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/applicationContext-security.xml,
            /WEB-INF/applicationContext-database.xml,
            /WEB-INF/applicationContext-hibernate.xml,
            /WEB-INF/applicationContext-roolo.xml,
            <!--/WEB-INF/loginservice-beans.xml,-->
            <!--/WEB-INF/applicationContext-mobileRepositoryService.xml,-->
            <!--/WEB-INF/applicationContext-colemo.xml,-->
            <!--/WEB-INF/applicationContext-userSessionBeans.xml,-->
            <!--/WEB-INF/sail-users.xml,-->
            classpath:/applicationContext-modelBeans.xml
        </param-value>
    </context-param>

    <!-- TAPESTRY FILTER -->

    <filter>
        <filter-name>app</filter-name>
            <filter-class>org.apache.tapestry5.spring.TapestrySpringFilter</filter-class>
    </filter>


    <!-- SPRING SECURITY -->

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- THIS ONE NEEDS TO BE AFTER SECURITY FILTER - OR ELSE SECURITY IS OVERLOOKED -->

    <filter-mapping>
        <filter-name>app</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- SCY LOGIN SERVICE -->

    <servlet>
        <servlet-name>CXFServlet</servlet-name>
        <servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
        <load-on-startup>1</load-on-startup>

    </servlet>
    <servlet-mapping>
        <servlet-name>CXFServlet</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>
    
    <!-- Roolo -->
	
	<!--
		- Dispatcher servlet definition for HTTP remoting via Hessian, Burlap, and
		- Spring's HTTP invoker (see remoting-servlet.xml for the controllers).
	-->
	<servlet>
		<servlet-name>remoting</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!--
		- Dispatcher servlet mapping for HTTP remoting via Hessian, Burlap, and
		- Spring's HTTP invoker (see remoting-servlet.xml for the controllers).
	-->
	<servlet-mapping>
		<servlet-name>remoting</servlet-name>
		<url-pattern>/remoting/*</url-pattern>
	</servlet-mapping>


    <!--servlet>
        <servlet-name>AjaxServlet</servlet-name>
        <servlet-class>org.apache.activemq.web.AjaxServlet</servlet-class>
    </servlet>

    <servlet-mapping>
        <servlet-name>AjaxServlet</servlet-name>
        <url-pattern>/amq/*</url-pattern>
    </servlet-mapping-->


    <!-- LISTENERS -->

    <!--listener>
        <listener-class>eu.scy.listeners.SQLSpaceStartupListener</listener-class>
    </listener-->

    <!-- listener>
        <listener-class>eu.scy.listeners.UserSessionListener</listener-class>
    </listener-->

    <!--listener>
        <listener-class>eu.scy.listeners.ColemoStartupListener</listener-class>
    </listener-->

    <listener>
        <listener-class>eu.scy.listeners.ConfigureDefaultScySettings</listener-class>
    </listener>



    <resource-ref>
        <res-ref-name>jdbc/scy</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
</web-app>

