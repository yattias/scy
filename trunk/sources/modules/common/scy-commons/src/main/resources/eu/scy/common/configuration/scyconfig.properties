# SERVERFILTER SETTINGS
serverfilter.db.user_name=${serverfilter.db.user_name}
serverfilter.db.password=${serverfilter.db.password}
serverfilter.db.url=${serverfilter.db.url}
serverfilter.db.host=${serverfilter.db.host}
# end SERVERFILTER SETTINGS
#
#
# CLIENT PROPERTIES
client.serverName=${client.serverName}
client.httpPort=${client.httpPort}
client.rmiPort=${client.rmiPort}
#contextPath=/roolo-mock-server
client.contextPath=${client.contextPath}
#sqlspacesServer=scy.collide.info
client.sqlspacesServer=${client.sqlspacesServer}
client.sqlspacesPort=${client.sqlspacesPort}
# end CLIENT PROPERTIES
#
#
# COMMUNICATION PROPERTIES
#sqlspaces server
communication.sqlspaces.server.host = ${communication.sqlspaces.server.host}
#communication.sqlspaces.server.host = scy.collide.info
#communication.sqlspaces.server.host = 127.0.0.1
communication.sqlspaces.server.port = ${communication.sqlspaces.server.port}
communication.sqlspaces.server.space.datasync = ${communication.sqlspaces.server.space.datasync}

#openfire server
#communication.datasync.server.host = wiki.intermedia.uio.no
#communication.datasync.server.host = descartes.inf.uni-due.de
#communication.datasync.server.host = imediamac09.uio.no
communication.datasync.server.host = ${communication.datasync.server.host}

#openfire port number
communication.datasync.server.port = ${communication.datasync.server.port}

#scy hub (external component for openfire, doesn't need to run on the same host as openfire)
#communication.datasync.server.externalComponent.host = wiki.intermedia.uio.no
communication.datasync.server.externalComponent.host = ${communication.datasync.server.externalComponent.host}

#scy hub port number
communication.datasync.server.externalComponent.port = ${communication.datasync.server.externalComponent.port}
communication.datasync.server.externalComponent.secretKey = ${communication.datasync.server.externalComponent.secretKey}
#name of external component
communication.datasync.messageHub = ${communication.datasync.messageHub}

# default messages written will expire after one hour
communication.datasync.message.default.expiration = ${communication.datasync.message.default.expiration}

#events which may be triggered from the client, see http://www.intermedia.uio.no/display/SCY/Communication+with+the+TBI+(UiO%2CUDE)
communication.client.event.query = ${communication.client.event.query}
communication.client.event.create.session = ${communication.client.event.create.session}
communication.client.event.get.sessions = ${communication.client.event.get.sessions}
communication.client.event.create.data =  ${communication.client.event.create.data}
communication.client.event.synchronize = ${communication.client.event.synchronize}
communication.client.event.join.session = ${communication.client.event.join.session}

#test property, do not modify
communication.test.property = ${communication.test.property}
# end CLIENT PROPERTIES
#
#