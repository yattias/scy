/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EloSaveAsPanel.java
 *
 * Created on 18-jan-2010, 14:35:30
 */
package eu.scy.client.desktop.scydesktop.scywindows.scydesktop;

import eu.scy.client.desktop.scydesktop.config.DisplayNames;
import eu.scy.client.desktop.scydesktop.config.EloConfig;
import java.util.List;
import javax.swing.JComboBox;

/**
 *
 * @author sikken
 */
public class EloSaveAsPanel extends javax.swing.JPanel
{

   /** Creates new form EloSaveAsPanel */
   public EloSaveAsPanel()
   {
      initComponents();
   }

   /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
   @SuppressWarnings("unchecked")
   // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
   private void initComponents() {

      jLabel1 = new javax.swing.JLabel();
      jLabel2 = new javax.swing.JLabel();
      titleField = new javax.swing.JTextField();
      jScrollPane1 = new javax.swing.JScrollPane();
      descriptionField = new javax.swing.JTextArea();
      jLabel3 = new javax.swing.JLabel();
      logicalTypeComboBox = new javax.swing.JComboBox();
      jLabel4 = new javax.swing.JLabel();
      functionalTypeComboBox = new javax.swing.JComboBox();
      cancelButton = new javax.swing.JButton();
      saveButton = new javax.swing.JButton();

      setBackground(new java.awt.Color(255, 255, 255));

      jLabel1.setText("Title");

      jLabel2.setText("Description");

      titleField.addKeyListener(new java.awt.event.KeyAdapter() {
         public void keyTyped(java.awt.event.KeyEvent evt) {
            titleFieldKeyTyped(evt);
         }
      });

      descriptionField.setColumns(20);
      descriptionField.setRows(5);
      jScrollPane1.setViewportView(descriptionField);

      jLabel3.setText("Logical type");

      logicalTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
      logicalTypeComboBox.setEnabled(false);
      logicalTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            logicalTypeComboBoxActionPerformed(evt);
         }
      });

      jLabel4.setText("Functional type");

      functionalTypeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
      functionalTypeComboBox.setEnabled(false);
      functionalTypeComboBox.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            functionalTypeComboBoxActionPerformed(evt);
         }
      });

      cancelButton.setText("Cancel");
      cancelButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelButtonActionPerformed(evt);
         }
      });

      saveButton.setText("Save");
      saveButton.addActionListener(new java.awt.event.ActionListener() {
         public void actionPerformed(java.awt.event.ActionEvent evt) {
            saveButtonActionPerformed(evt);
         }
      });

      org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
      this.setLayout(layout);
      layout.setHorizontalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(layout.createSequentialGroup()
                  .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(jLabel2)
                     .add(jLabel1))
                  .add(25, 25, 25)
                  .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                     .add(titleField, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)))
               .add(layout.createSequentialGroup()
                  .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(jLabel4)
                     .add(jLabel3))
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                     .add(logicalTypeComboBox, 0, 270, Short.MAX_VALUE)
                     .add(functionalTypeComboBox, 0, 270, Short.MAX_VALUE)))
               .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                  .add(saveButton)
                  .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                  .add(cancelButton)))
            .addContainerGap())
      );
      layout.setVerticalGroup(
         layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
         .add(layout.createSequentialGroup()
            .addContainerGap()
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(jLabel1)
               .add(titleField, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
               .add(jLabel2)
               .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 67, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(jLabel3)
               .add(logicalTypeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(jLabel4)
               .add(functionalTypeComboBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(15, 15, 15)
            .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
               .add(saveButton)
               .add(cancelButton))
            .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );
   }// </editor-fold>//GEN-END:initComponents

    private void titleFieldKeyTyped(java.awt.event.KeyEvent evt)//GEN-FIRST:event_titleFieldKeyTyped
    {//GEN-HEADEREND:event_titleFieldKeyTyped
       setSaveButtonState();
    }//GEN-LAST:event_titleFieldKeyTyped

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_saveButtonActionPerformed
    {//GEN-HEADEREND:event_saveButtonActionPerformed
       eloSaveAsActionListener.eloSaved();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
    {//GEN-HEADEREND:event_cancelButtonActionPerformed
       eloSaveAsActionListener.eloSaveCancelled();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void logicalTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_logicalTypeComboBoxActionPerformed
    {//GEN-HEADEREND:event_logicalTypeComboBoxActionPerformed
       setSaveButtonState();
    }//GEN-LAST:event_logicalTypeComboBoxActionPerformed

    private void functionalTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_functionalTypeComboBoxActionPerformed
    {//GEN-HEADEREND:event_functionalTypeComboBoxActionPerformed
       setSaveButtonState();
    }//GEN-LAST:event_functionalTypeComboBoxActionPerformed
   // Variables declaration - do not modify//GEN-BEGIN:variables
   private javax.swing.JButton cancelButton;
   private javax.swing.JTextArea descriptionField;
   private javax.swing.JComboBox functionalTypeComboBox;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JLabel jLabel4;
   private javax.swing.JScrollPane jScrollPane1;
   private javax.swing.JComboBox logicalTypeComboBox;
   private javax.swing.JButton saveButton;
   private javax.swing.JTextField titleField;
   // End of variables declaration//GEN-END:variables
   private EloConfig eloConfig;
   private DisplayNames logicalTypeDisplayNames;
   private DisplayNames functinalTypeDisplayNames;
   private boolean typesAdded = false;
   private EloSaveAsActionListener eloSaveAsActionListener;

   private void setSaveButtonState()
   {
      boolean titlePass = titleField.getText().trim().length() > 0;
      boolean logicalTypePass = typePass(logicalTypeComboBox);
      boolean functionalTypePass = typePass(functionalTypeComboBox);
      saveButton.setEnabled(titlePass && logicalTypePass && functionalTypePass);
   }

   private boolean typePass(JComboBox comboBox)
   {
      if (comboBox.getItemCount() > 0)
      {
         return comboBox.getSelectedIndex() > 0;
      }
      return true;
   }

   public void setEloSaveAsActionListener(EloSaveAsActionListener eloSaveAsActionListener)
   {
      this.eloSaveAsActionListener = eloSaveAsActionListener;
   }

   public void setEloConfig(EloConfig eloConfig)
   {
      this.eloConfig = eloConfig;
      addAllTypes();
   }

   public void setFunctinalTypeDisplayNames(DisplayNames functinalTypeDisplayNames)
   {
      functionalTypeComboBox.removeAllItems();
      this.functinalTypeDisplayNames = functinalTypeDisplayNames;
      addAllTypes();
   }

   public void setLogicalTypeDisplayNames(DisplayNames logicalTypeDisplayNames)
   {
      logicalTypeComboBox.removeAllItems();
      this.logicalTypeDisplayNames = logicalTypeDisplayNames;
      addAllTypes();
   }

   private void addAllTypes()
   {
      if (!typesAdded && eloConfig != null && functinalTypeDisplayNames != null && logicalTypeDisplayNames != null)
      {
         addTypes(logicalTypeComboBox, eloConfig.getLogicalTypeNames(), logicalTypeDisplayNames);
         addTypes(functionalTypeComboBox, eloConfig.getFunctionalTypeNames(), functinalTypeDisplayNames);
         typesAdded = true;
      }
   }

   private void addTypes(JComboBox comboBox, List<String> types, DisplayNames displayNames)
   {
      comboBox.removeAllItems();
      comboBox.addItem("");
      if (types != null)
      {
         for (String type : types)
         {
            comboBox.addItem(displayNames.getDisplayName(type));
         }
         comboBox.setEnabled(!types.isEmpty());
         if (types.size() == 1)
         {
            comboBox.setSelectedIndex(1);
         }
      }
   }

   public void setTitle(String title)
   {
      titleField.setText(title);
      setSaveButtonState();
   }

   public String getTitle()
   {
      return titleField.getText().trim();
   }

   public void setDescription(String description)
   {
      descriptionField.setText(description);
   }

   public String getDescription()
   {
      return descriptionField.getText().trim();
   }

   public void setLogicalType(String type)
   {
      logicalTypeComboBox.setSelectedItem(type);
   }

   public String getLogicalType()
   {
      return (String) logicalTypeComboBox.getSelectedItem();
   }

   public void setFunctionalType(String type)
   {
      functionalTypeComboBox.setSelectedItem(type);
   }

   public String getFunctionalType()
   {
      return (String) functionalTypeComboBox.getSelectedItem();
   }
}
