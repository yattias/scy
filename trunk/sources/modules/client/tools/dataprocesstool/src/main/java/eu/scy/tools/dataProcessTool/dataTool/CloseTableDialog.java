/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CloseTableDialog.java
 *
 * Created on 21 nov. 2008, 15:00:07
 */

package eu.scy.tools.dataProcessTool.dataTool;

import eu.scy.tools.dataProcessTool.common.Dataset;
import eu.scy.tools.dataProcessTool.common.Visualization;
import eu.scy.tools.dataProcessTool.utilities.MyUtilities;

/**
 * Dialog which allows the choice between close the tab or delete the table
 * @author Marjolaine
 */
public class CloseTableDialog extends javax.swing.JDialog {

    // PROPERTY
    /* owner */
    private DataProcessToolPanel owner ;
    /*ds selectionne */
    private Dataset dataset ;
    /* graphe selectionne */
    private Visualization vis ;

    // CONSTRUCTOR
    public CloseTableDialog(DataProcessToolPanel owner, Dataset dataset) {
        super();
        this.owner = owner;
        this.dataset = dataset;
        this.vis = null;
        initComponents(); 
        setModal(true);
        setResizable(false);
        setLocationRelativeTo(owner);
        init();
    }

    // CONSTRUCTOR
    public CloseTableDialog(DataProcessToolPanel owner, Visualization vis) {
        super();
        this.owner = owner;
        this.dataset = null;
        this.vis = vis;
        initComponents();
        setModal(true);
        setResizable(false);
        setLocationRelativeTo(owner);
        init();
    }


    /** Creates new form CloseTableDialog */
    public CloseTableDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

     // METHODES
    /* initialisation */
    private void init(){
        if (dataset != null){
            // parametres dans le texte des rb
            String s = owner.getBundleString("LABEL_CLOSE_DATA_TABLE");
            s = MyUtilities.replace(s,0,dataset.getName());
            rbClose.setText(s);
            s = owner.getBundleString("LABEL_DELETE_DATA_TABLE");
            s = MyUtilities.replace(s,0, dataset.getName());
            rbDelete.setText(s);
        }else{
            // parametres dans le texte des rb
            String s = owner.getBundleString("LABEL_CLOSE_GRAPH");
            s = MyUtilities.replace(s,0,vis.getName());
            rbClose.setText(s);
            s = owner.getBundleString("LABEL_DELETE_GRAPH");
            s = MyUtilities.replace(s,0, vis.getName());
            rbDelete.setText(s);
        }
        resizeElements();
        repaint();
    }

    /*
     * permet de resizer les elements de la fenetre en fonction de la longueur des textes
     * variable selon la langue
     */
   private void resizeElements(){
       // label question
       this.labelQuestion.setSize(MyUtilities.lenghtOfString(this.labelQuestion.getText(), getFontMetrics(this.labelQuestion.getFont())), this.labelQuestion.getHeight());
       // rb fermer
       this.rbClose.setSize(MyUtilities.lenghtOfString(this.rbClose.getText(), getFontMetrics(this.rbClose.getFont())), this.rbClose.getHeight());
       // rb suppr
      this.rbDelete.setSize(MyUtilities.lenghtOfString(this.rbDelete.getText(), getFontMetrics(this.rbDelete.getFont())), this.rbDelete.getHeight());
      this.rbDelete.setPreferredSize(rbDelete.getSize());
       int maxL = Math.max(rbClose.getWidth(), rbDelete.getWidth());
       if (maxL + this.rbClose.getX() > getWidth()){
           int newWidth = maxL + this.rbClose.getX() +20;
           setSize(newWidth, getHeight());
       }
       // bouton Ok
       this.buttonOk.setSize(MyUtilities.lenghtOfString(this.buttonOk.getText(), getFontMetrics(this.buttonOk.getFont())), this.buttonOk.getHeight());
       // bouton Annuler
       this.buttonCancel.setSize(MyUtilities.lenghtOfString(this.buttonCancel.getText(), getFontMetrics(this.buttonCancel.getFont())), this.buttonCancel.getHeight());
   }

   /* validation boutton OK */
   private void validDialog(){
       boolean isOk = true ;
       if (rbClose.isSelected()){
           if (dataset == null)
               isOk = owner.closeVisualization(vis);
           else
            isOk = owner.closeDataset(dataset);
       }else
           if (dataset == null)
               isOk = owner.deleteVisualization(vis);
           else
            isOk = owner.deleteDataset(dataset);
       if (isOk)
           this.dispose();
   }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelQuestion = new javax.swing.JLabel();
        rbClose = new javax.swing.JRadioButton();
        rbDelete = new javax.swing.JRadioButton();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(this.owner.getBundleString("TITLE_DIALOG_CLOSE_DATA"));

        labelQuestion.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelQuestion.setText(this.owner.getBundleString("LABEL_QUESTION_TODO"));

        rbClose.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbClose.setSelected(true);
        rbClose.setText(this.owner.getBundleString("LABEL_CLOSE_DATA_TABLE"));
        rbClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCloseActionPerformed(evt);
            }
        });

        rbDelete.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbDelete.setText(this.owner.getBundleString("LABEL_DELETE_DATA_TABLE"));
        rbDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbDeleteActionPerformed(evt);
            }
        });

        buttonOk.setText(this.owner.getBundleString("BUTTON_OK"));
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        buttonCancel.setText(this.owner.getBundleString("BUTTON_CANCEL"));
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(buttonOk)
                        .addGap(72, 72, 72)
                        .addComponent(buttonCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbDelete)
                            .addComponent(rbClose)
                            .addComponent(labelQuestion))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelQuestion)
                .addGap(18, 18, 18)
                .addComponent(rbClose)
                .addGap(18, 18, 18)
                .addComponent(rbDelete)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancel))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbDeleteActionPerformed
        this.rbDelete.setSelected(true);
        this.rbClose.setSelected(false);
    }//GEN-LAST:event_rbDeleteActionPerformed

    private void rbCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCloseActionPerformed
        this.rbDelete.setSelected(false);
        this.rbClose.setSelected(true);
    }//GEN-LAST:event_rbCloseActionPerformed

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        validDialog();
    }//GEN-LAST:event_buttonOkActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CloseTableDialog dialog = new CloseTableDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JLabel labelQuestion;
    private javax.swing.JRadioButton rbClose;
    private javax.swing.JRadioButton rbDelete;
    // End of variables declaration//GEN-END:variables

}
