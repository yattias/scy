/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpenDataDialog.java
 *
 * Created on 10 juin 2009, 15:23:13
 */

package eu.scy.tools.dataProcessTool.dataTool;

import eu.scy.tools.dataProcessTool.utilities.MyUtilities;

/**
 * open data dialog, 3 options :
 * - open an ELO ds/pds
 * - import .xls
 * - merge a ds to the current ds
 * @author Marjolaine
 */
public class OpenDataDialog extends javax.swing.JDialog {

    private DataProcessToolPanel dataToolPanel;

    private OpenDataAction openDataAction;

    public OpenDataDialog(DataProcessToolPanel dataToolPanel) {
        super();
        this.dataToolPanel = dataToolPanel;
        initComponents();
        initGUI();
    }


    /** Creates new form OpenDataDialog */
    public OpenDataDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
    * Instancie l'objet OpenDataAction.
    * @param action OpenDataAction
    */
    public void addOpenDataAction(OpenDataAction action){
        this.openDataAction=action;
    }

    private void initGUI(){
        // rb load ELO
       this.rbLoadELO.setSize(MyUtilities.lenghtOfString(this.rbLoadELO.getText(), getFontMetrics(this.rbLoadELO.getFont())), this.rbLoadELO.getHeight());
       // rb import xls
       this.rbImportXLS.setSize(MyUtilities.lenghtOfString(this.rbImportXLS.getText(), getFontMetrics(this.rbImportXLS.getFont())), this.rbImportXLS.getHeight());
       // rb merge
       this.rbMergeDs.setSize(MyUtilities.lenghtOfString(this.rbMergeDs.getText(), getFontMetrics(this.rbMergeDs.getFont())), this.rbMergeDs.getHeight());
       // bouton Ok
       this.buttonOK.setSize(60+MyUtilities.lenghtOfString(this.buttonOK.getText(), getFontMetrics(this.buttonOK.getFont())), this.buttonOK.getHeight());
       // bouton Annuler
       this.buttonCancel.setSize(60+MyUtilities.lenghtOfString(this.buttonCancel.getText(), getFontMetrics(this.buttonCancel.getFont())), this.buttonCancel.getHeight());
    }

    private void validDialog(){
        if(this.rbLoadELO.isSelected()){
            openDataAction.openELO();
        }else if (this.rbImportXLS.isSelected()){
            openDataAction.importCSVFile();
        }else if (this.rbMergeDs.isSelected()){
            openDataAction.mergeDataset();
        }
        this.dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rbLoadELO = new javax.swing.JRadioButton();
        rbImportXLS = new javax.swing.JRadioButton();
        rbMergeDs = new javax.swing.JRadioButton();
        buttonOK = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(dataToolPanel.getBundleString("TITLE_DIALOG_OPEN_DATA"));
        setModal(true);
        setResizable(false);

        rbLoadELO.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbLoadELO.setSelected(true);
        rbLoadELO.setText(dataToolPanel.getBundleString("LABEL_LOAD_ELO"));
        rbLoadELO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbLoadELOActionPerformed(evt);
            }
        });

        rbImportXLS.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbImportXLS.setText(dataToolPanel.getBundleString("LABEL_IMPORT_XLS"));
        rbImportXLS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbImportXLSActionPerformed(evt);
            }
        });

        rbMergeDs.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        rbMergeDs.setText(dataToolPanel.getBundleString("LABEL_MERGE_DS"));
        rbMergeDs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMergeDsActionPerformed(evt);
            }
        });

        buttonOK.setText(dataToolPanel.getBundleString("BUTTON_OK"));
        buttonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOKActionPerformed(evt);
            }
        });

        buttonCancel.setText(dataToolPanel.getBundleString("BUTTON_CANCEL"));
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(rbLoadELO, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbImportXLS, javax.swing.GroupLayout.DEFAULT_SIZE, 286, Short.MAX_VALUE)
                    .addComponent(rbMergeDs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(buttonOK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(buttonCancel)
                .addGap(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbLoadELO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbImportXLS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbMergeDs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOK)
                    .addComponent(buttonCancel))
                .addGap(31, 31, 31))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void rbLoadELOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbLoadELOActionPerformed
        this.rbLoadELO.setSelected(true);
        this.rbImportXLS.setSelected(false);
        this.rbMergeDs.setSelected(false);
    }//GEN-LAST:event_rbLoadELOActionPerformed

    private void rbImportXLSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbImportXLSActionPerformed
        this.rbLoadELO.setSelected(false);
        this.rbImportXLS.setSelected(true);
        this.rbMergeDs.setSelected(false);
    }//GEN-LAST:event_rbImportXLSActionPerformed

    private void rbMergeDsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMergeDsActionPerformed
        this.rbLoadELO.setSelected(false);
        this.rbImportXLS.setSelected(false);
        this.rbMergeDs.setSelected(true);
    }//GEN-LAST:event_rbMergeDsActionPerformed

    private void buttonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOKActionPerformed
        validDialog();
    }//GEN-LAST:event_buttonOKActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OpenDataDialog dialog = new OpenDataDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOK;
    private javax.swing.JRadioButton rbImportXLS;
    private javax.swing.JRadioButton rbLoadELO;
    private javax.swing.JRadioButton rbMergeDs;
    // End of variables declaration//GEN-END:variables

}
