/*
 * CopexApplet.java
 *
 * Created on 25 juillet 2008, 14:38
 */

package eu.scy.client.tools.copex.edp;


import eu.scy.client.tools.copex.common.LearnerProcedure;
import eu.scy.client.tools.copex.logger.CopexProperty;
import eu.scy.client.tools.copex.utilities.ActionCopex;
import eu.scy.client.tools.copex.utilities.CopexReturn;
import java.awt.BorderLayout;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.Locale;
import javax.swing.JApplet;

/**
 * applet for the copex editor
 * 
 * @author  marjolaine
 */
public class CopexApplet extends JApplet implements ActionCopex {
    /* edp panel*/
    private CopexPanel copex;
    
    /** Initializes the applet CopexApplet */
    @Override
    public void init() {
        try {
            java.awt.EventQueue.invokeAndWait(new Runnable() {
                public void run() {
                    initComponents();
                    initEdP();
                    
                }
            });
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    @Override
    public void stop() {
        copex.stop();
        super.stop();
    }

    
    /**
     * applet initialization
     */
    public void initEdP(){
        // gets the paremters of the applet
        String idUser = getParameter("USER");
        String m = getParameter("MISSION");
        String group = getParameter("GROUP");
        String labDoc = getParameter("LABDOC");
        
        long dbKeyMission = -1;
        long dbKeyGroup = -1;
        long dbKeyLabDoc = -1;
        try{
            dbKeyMission = Long.valueOf(m);
            dbKeyGroup = Long.parseLong(group);
            dbKeyLabDoc = Long.parseLong(labDoc);
        }catch(Throwable t){
            System.out.println(t);
            this.stop();
            this.destroy();
        }
        // i18n
        Locale locale = Locale.getDefault();
        //locale = new Locale("en", "GB");
        //locale = new Locale("fr", "FR");
        copex = new CopexPanel(null,locale, null, idUser, dbKeyMission, dbKeyGroup, dbKeyLabDoc);
        copex.addActionCopex(this);
        getContentPane().remove(labelWait);
        add(copex, BorderLayout.CENTER);
        setSize(CopexPanel.PANEL_WIDTH, CopexPanel.PANEL_HEIGHT);
    }
    
    
    /* gets the applet */
    public CopexApplet getCopexApplet(){
        return this;
    }
    
     /* html print*/
    public void printCopexHTML(String nameFile) {
        try{
            URL urlPrint ;
            urlPrint = new URL(getCodeBase(), getDirectoryDataPrint()+nameFile);

            getAppletContext().showDocument(urlPrint, "_blank");
            repaint();
        }catch(MalformedURLException e){
            copex.displayError(new CopexReturn(copex.getBundleString("MSG_ERROR_PRINT")+" : "+e, false), copex.getBundleString("TITLE_DIALOG_ERROR"));
        }
    }


     public String getDirectorySaveXML() {
       return "../editeurProtocole/proc/";
    }

    public String getDirectoryDataPrint() {
         return "../editeurProtocole/print/print/";
    }

    public String getDirectoryTrace() {
         return "../trace/";
    }

   
   
    
    
    /** This method is called from within the init() method to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelWait = new javax.swing.JLabel();

        setBackground(new java.awt.Color(236, 233, 216));

        labelWait.setText("Veuillez patientez pendant le chargement des donnees....");
        labelWait.setName("labelWait"); // NOI18N
        getContentPane().add(labelWait, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelWait;
    // End of variables declaration//GEN-END:variables

    @Override
    public void loadHelpProc(LearnerProcedure helpProc) {
        
    }

    @Override
    public void logAction(String type, List<CopexProperty> attribute) {
        //nothing
    }

    
 
   
    
}


