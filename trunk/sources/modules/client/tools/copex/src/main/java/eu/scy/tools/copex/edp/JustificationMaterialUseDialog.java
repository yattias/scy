/*
 * JustificationMaterialUseDialog.java
 *
 * Created on 28 octobre 2008, 22:07
 */

package eu.scy.tools.copex.edp;

import eu.scy.tools.copex.common.Material;
import eu.scy.tools.copex.utilities.CopexReturn;
import eu.scy.tools.copex.utilities.CopexUtilities;
import eu.scy.tools.copex.utilities.MyConstants;


/**
 * Justification de l'utilisation ou non du material
 * @author  MBO
 */
public class JustificationMaterialUseDialog extends javax.swing.JDialog {
    // ATTRIBUTS
    /* edP */
    private EdPPanel edP;
    /* Material*/
    private Material material;
    /* justification */
    private String justification;
    /* mode ajout */
    private boolean modeAdd;

    public JustificationMaterialUseDialog(EdPPanel edP, Material material, String justification, boolean modeAdd) {
        super();
        this.edP = edP;
        this.material = material;
        this.justification = justification;
        this.modeAdd = modeAdd;
        setModal(true);
        setLocationRelativeTo(edP);
        setResizable(false);
        initComponents();
        init();
    }
    
    
    
    
    /** Creates new form JustificationMaterialUseDialog */
    public JustificationMaterialUseDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void init(){
        if (justification != null){
            textAreaJustification.setText(justification);
        }
        
    }
    /* enregistrement de la justification*/
    private void validJustification(){
        String j = textAreaJustification.getText();
        if (j.length() > MyConstants.MAX_LENGHT_JUSTIFICATION){
            String msg = edP.getBundleString("MSG_LENGHT_MAX");
            msg  = CopexUtilities.replace(msg, 0, edP.getBundleString("LABEL_JUSTIFICATION"));
            msg = CopexUtilities.replace(msg, 1, ""+MyConstants.MAX_LENGHT_JUSTIFICATION);
            edP.displayError(new CopexReturn(msg, false), edP.getBundleString("TITLE_DIALOG_ERROR")); 
            return;
        }
        boolean isOk = true;
        if (modeAdd){
            isOk = edP.addMaterialUseForProc(material, j, MyConstants.NOT_UNDOREDO);
            
        }else{
            isOk = edP.updateMaterialUseForProc(material, j, MyConstants.NOT_UNDOREDO);
        }
        if (isOk)
                this.dispose();
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelJustification = new javax.swing.JLabel();
        jScrollPaneJustification = new javax.swing.JScrollPane();
        textAreaJustification = new javax.swing.JTextArea();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(edP.getBundleString("TITLE_DIALOG_JUSTIFICATION_MATERIAL"));
        setMinimumSize(new java.awt.Dimension(200, 200));
        setModal(true);
        setResizable(false);

        labelJustification.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelJustification.setText(edP.getBundleString("LABEL_JUSTIFICATION")+" : ");
        labelJustification.setName("labelJustification"); // NOI18N

        jScrollPaneJustification.setName("jScrollPaneJustification"); // NOI18N

        textAreaJustification.setColumns(20);
        textAreaJustification.setRows(5);
        textAreaJustification.setName("textAreaJustification"); // NOI18N
        jScrollPaneJustification.setViewportView(textAreaJustification);

        buttonOk.setText(edP.getBundleString("BUTTON_OK"));
        buttonOk.setName("buttonOk"); // NOI18N
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        buttonCancel.setText(edP.getBundleString("BUTTON_CANCEL"));
        buttonCancel.setName("buttonCancel"); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelJustification)
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPaneJustification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(buttonOk)
                        .addGap(110, 110, 110)
                        .addComponent(buttonCancel)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPaneJustification, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJustification))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancel))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
    this.dispose();
}//GEN-LAST:event_buttonCancelActionPerformed

private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
    validJustification() ;
}//GEN-LAST:event_buttonOkActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JustificationMaterialUseDialog dialog = new JustificationMaterialUseDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JScrollPane jScrollPaneJustification;
    private javax.swing.JLabel labelJustification;
    private javax.swing.JTextArea textAreaJustification;
    // End of variables declaration//GEN-END:variables

}
