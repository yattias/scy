<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.enovate</groupId>
    <artifactId>scyadmin</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>Scy UserAdmin</name>
    <dependencies>
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-core</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-spring</artifactId>
            <version>${tapestry-release-version}</version>
        </dependency>

        <!-- A dependency on either JUnit or TestNG is required, or the
      surefire plugin (which runs the tests)
      will fail, preventing Maven from packaging the WAR. Tapestry includes a
      large number
      of testing facilities designed for use with TestNG (http://testng.org/), so
      it's recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.1</version>
            <classifier>jdk15</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate</artifactId>
            <version>3.2.1.ga</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <version>3.2.1.ga</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.0.5</version>
        </dependency>

        <dependency>
            <groupId>com.sun.xml.ws</groupId>
            <artifactId>jaxws-rt</artifactId>
            <version>2.1.2</version>
        </dependency>

        <dependency>
            <groupId>org.jvnet.jax-ws-commons.spring</groupId>
            <artifactId>jaxws-spring</artifactId>
            <version>1.8</version>
        </dependency>

        <dependency>
            <groupId>com.sun.org.apache.xml.internal</groupId>
            <artifactId>resolver</artifactId>
            <version>20050927</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <version>2.5.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>2.5.2</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>2.5</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>2.0.3</version>
        </dependency>


    </dependencies>

    <build>

        <filters>
            <filter>src/main/filters/filter.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <finalName>scyuseradmin</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                    <optimize>true</optimize>
                </configuration>
            </plugin>

            <!-- Run the application using "mvn jetty:run" -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>6.1.5</version>
                <configuration>
                    <!-- Log to the console. -->
                    <requestLog
                            implementation="org.mortbay.jetty.NCSARequestLog">
                        <!-- This doesn't do anything for Jetty, but is a
                        workaround for a Maven bug
                        that prevents the requestLog from being set.
                        -->
                        <append>true</append>
                    </requestLog>

                    <webDefaultXml>target/classes/webdefault.xml</webDefaultXml>

                    <jettyEnvXml>target/classes/jetty-env.xml</jettyEnvXml>
                </configuration>
            </plugin>


            <!-- This changes the WAR file packaging so that what would
           normally go into WEB-INF/classes
           is instead packaged as WEB-INF/lib/gatturnus.jar. This is
           necessary for Tapestry
           to be able to search for page and component classes at
           startup. Only
           certain application servers require this configuration, please
           see the documentation
           at the Tapestry 5 project page
           (http://tapestry.apache.org/tapestry5/). -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archiveClasses>true</archiveClasses>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2-beta-1</version>
                <configuration>

                    <descriptors>
                        <descriptor>src/assembly/jaxwsjar.xml</descriptor>
                    </descriptors>
                    <appendAssemblyId>true</appendAssemblyId>
                    <attach>true</attach>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxws-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>wsgen</goal>
                        </goals>
                        <configuration>

                            <packageName>eu.scy.modules.useradmin.webservice.</packageName>

                            <sei>eu.scy.modules.useradmin.webservice.UserManagement</sei>

                            <!--sei>com.enovate.webservice.Authenticator</sei-->
                            <genWsdl>true</genWsdl>
                            <keep>true</keep>
                            <verbouse>true</verbouse>
                            <!-- The name of your generated source package
                            -->
                        </configuration>
                    </execution>
                </executions>

                <!-- if you want to use a specific version of JAX-WS, you
           can do so like this -->
                <!--dependencies>
                <groupId>com.sun.xml.ws</groupId>
                <artifactId>jaxws-tools</artifactId>
                <version>2.1.1</version>
                </dependencies-->
            </plugin>


            <!--plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>jaxws-maven-plugin</artifactId>
            <executions>
            <execution>
            <goals>
            <goal>wsimport</goal>
            </goals>
            <configuration>
            <wsdlUrls>

            <wsdlUrl>file:////${project.build.directory}/jaxws/wsgen/wsdl/UserManagemen
            tService?wsdl</wsdlUrl>
            </wsdlUrls>

            <packageName>com.enovate.webservice.client</packageName>
            </configuration>
            </execution>
            </executions>
            </plugin-->

        </plugins>
    </build>

    <reporting>

        <!-- Adds a report detailing the components, mixins and base
   classes defined by this module. -->
        <plugins>
            <plugin>
                <groupId>org.apache.tapestry</groupId>
                <artifactId>tapestry-component-report</artifactId>
                <version>${tapestry-release-version}</version>
                <configuration>
                    <rootPackage>eu.scy.modules.useradmin</rootPackage>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <repositories>
        <!-- This can be commented out when the tapestry-release-version is
     a not a snapshot.
     The non-snapshot Tapestry artifacts are distributed through the central
     repository at ibiblio. -->

        <repository>
            <id>tapestry-snapshots</id>

            <url>http://tapestry.formos.com/maven-snapshot-repository/</url>
        </repository>

        <repository>
            <id>codehaus.snapshots</id>
            <url>http://snapshots.repository.codehaus.org</url>
        </repository>
        <!-- For access to the selenium JARs. -->
        <repository>
            <id>openqa</id>
            <name>OpenQA Maven Repository</name>
            <url>http://maven.openqa.org/</url>
        </repository>


        <!-- METRO -->

        <repository>
            <id>maven-repository.dev.java.net</id>
            <name>Java.net Repository for Maven 1</name>
            <url>http://download.java.net/maven/1/</url>
            <layout>legacy</layout>
        </repository>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven 2</name>
            <url>http://download.java.net/maven/2/</url>
        </repository>


    </repositories>


    <pluginRepositories>

        <!-- As above, this can be commented out when access to the
snapshot version
of a Tapestry Maven plugin is not required. -->
        <pluginRepository>
            <id>tapestry-snapshots</id>

            <url>http://tapestry.formos.com/maven-snapshot-repository/</url>
        </pluginRepository>

        <pluginRepository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
            <layout>default</layout>
        </pluginRepository>


    </pluginRepositories>

    <properties>
        <tapestry-release-version>5.0.11</tapestry-release-version>
    </properties>
</project>
