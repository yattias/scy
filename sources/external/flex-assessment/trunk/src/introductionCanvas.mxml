<?xml version="1.0" encoding="utf-8"?> 
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:reflector="com.rictus.reflector.*" >
	
	<fx:Script>
		<![CDATA[
			import listeners.ToggleEvent;
			
			private var so:SharedObject;
			private var portfolioElo:XML;
			[Bindable] private var portfolioCount:Number;
			
			protected function clickHandler(dir:String, stack:Number):void {
				var tEvent:ToggleEvent = new ToggleEvent(index.TOGGLE_COMMAND, true);
				tEvent.direction = dir;
				tEvent.selecTarget = stack;
				dispatchEvent(tEvent);
			}
			
			public function refreshContent():void {
				so = SharedObject.getLocal("scy-eportfolio");
				portfolioElo = so.data.retrievedElosFromRoolo as XML;
				
				portfolioCount = portfolioElo.elements("portfolio").length();
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="eloCanvases" />
		<s:Sequence id="fadeIn">
			<s:Fade duration="1000" alphaFrom="0.0" alphaTo="1.0"/>
		</s:Sequence>
		<s:Sequence id="zoomOut" >
			<s:Fade duration="1000" alphaFrom="1.0" alphaTo="0.0"/>
		</s:Sequence>
	</fx:Declarations>
	
	<s:VGroup gap="10" width="100%" height="100%" horizontalAlign="center">
		<s:HGroup width="100%" height="70" horizontalAlign="center" verticalAlign="middle" gap="3">
			<s:BorderContainer id="headerLogo" width="70" height="70" borderStyle="solid" borderColor="{index.THEME_COL}">
				<s:backgroundFill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="{index.THEME_COL}" />
						<s:GradientEntry color="{index.THEME_COL}" />
					</s:LinearGradient>
				</s:backgroundFill>
				
				<s:Image source="assets/images/assess.png" width="60" height="60" left="5" top="5" />
			</s:BorderContainer>	
			<s:BorderContainer id="header" width="100%" height="70" borderStyle="solid" borderColor="{index.THEME_COL}">
				<s:backgroundFill>
						<s:LinearGradient rotation="90">
							<s:GradientEntry color="{index.THEME_COL}" />
							<s:GradientEntry color="{index.THEME_COL}" />
						</s:LinearGradient>
					</s:backgroundFill>
	
				<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
					<s:Label id="headerText" width="60%" color="{index.BACK_GRADIENT_BOT}" fontSize="15" textAlign="center" text="{resourceManager.getString('resources', 'HELLO')}" />
				</s:HGroup>
			</s:BorderContainer>	
		</s:HGroup>

		<s:HGroup id="selectionBox" width="100%" gap="0">
			<s:HGroup id="selec" width="50%" height="100%" gap="10" verticalAlign="middle">
				<mx:Spacer width="10" />
				<s:Label width="100%" text="{resourceManager.getString('resources', 'MISSION')+': '+index.MISSION_NAME+''}" color="{index.THEME_COL}" />
			</s:HGroup>
		</s:HGroup>

		<s:VGroup width="100%" height="100%" horizontalAlign="center" contentBackgroundColor="#FF0000">
			<mx:Spacer height="50" />
			<s:BorderContainer id="introductionBox" width="50%" height="150" backgroundColor="{index.THEME_COL}" borderStyle="inset" cornerRadius="10" borderColor="{index.THEME_COL}">
				<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" >
					<mx:Text id="introductionText" width="95%" color="{index.BACK_GRADIENT_BOT}" fontSize="16" fontAntiAliasType="advanced" textAlign="center" htmlText="{resourceManager.getString('resources', 'INTRODUCTION_TEXT')}"/>
				</s:HGroup>
			</s:BorderContainer>
			<reflector:Reflector target="{introductionBox}" alpha=".6" falloff=".5" y="{introductionBox.y+introductionBox.height}" />
		</s:VGroup>
	</s:VGroup>
	<s:VGroup id="introFooter" width="100%" height="50" bottom="15" horizontalAlign="center" gap="10" verticalAlign="middle">
		<s:Label width="{introFooter.width}" textAlign="center" text="{portfolioCount+' '+resourceManager.getString('resources', 'SUBM_STAT_TEXT')}" color="{index.THEME_COL}" />
		<s:Button id="viewStudents" label="{resourceManager.getString('resources', 'VIEW_STUDENTS')}" click="clickHandler(index.LEFT_DIRECTION, index.STACK_STUDTABLE_PANEL)" />
	</s:VGroup>
</s:NavigatorContent>
