<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" showEffect="{fadeIn}" hideEffect="{zoomOut}" width="100%" height="100%" xmlns:local="*">
	<fx:Declarations>
		<s:Sequence id="fadeIn">
			<s:Fade duration="1000" alphaFrom="0.0" alphaTo="1.0"/>
		</s:Sequence>
		<s:Sequence id="zoomOut" >
			<s:Fade duration="1000" alphaFrom="1.0" alphaTo="0.0"/>
		</s:Sequence>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import flash.utils.clearInterval;
			import flash.utils.setInterval;
			
			import listeners.ToggleEvent;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import utility.XMLUtilJer;
			
			public var elosArray:ArrayCollection;
			[Bindable] public var cat:String;
			
			private var subCE:subCanvasElo;
			private var builtFinished:Boolean = false;
			
			[Bindable] private var unassessedElos:Number;
			[Bindable] private var poorElos:Number;
			[Bindable] private var fairElos:Number;
			[Bindable] private var goodElos:Number;
			[Bindable] private var excellentElos:Number;
			
			[Bindable] private var unassessedElosArray:ArrayCollection;
			[Bindable] private var poorElosArray:ArrayCollection;
			[Bindable] private var fairElosArray:ArrayCollection;
			[Bindable] private var goodElosArray:ArrayCollection;
			[Bindable] private var excellentElosArray:ArrayCollection;
			
			private var refreshTimer:Number;
			
			public function refreshView():void {
				unassessedElosArray = new ArrayCollection();
				poorElosArray = new ArrayCollection();
				fairElosArray = new ArrayCollection();
				goodElosArray = new ArrayCollection();
				excellentElosArray = new ArrayCollection();
				
				unassessedElos = 0;
				poorElos = 0;
				fairElos = 0;
				goodElos = 0;
				excellentElos = 0;
				
				for(var i:Number = 0; i < elosArray.length; i++) {
					subCE = XMLUtilJer.getSubCanvasEloFromObject(elosArray[i]);
					
					if(subCE.assessed.toString() == "true") {
						switch(subCE.grade) {
							case "poor":
								poorElosArray.addItem(subCE);
								poorElos++;
								break;
							case "fair":
								fairElosArray.addItem(subCE);
								fairElos++;
								break;
							case "good":
								goodElosArray.addItem(subCE);
								goodElos++;
								break;
							case "excellent":
								excellentElosArray.addItem(subCE);
								excellentElos++;
								break;
						}
					}
					else {
						unassessedElosArray.addItem(subCE);
						unassessedElos++;
					}
					
					if(subCE.shouldBeSelected) {
						subCE.compareCb_changeHandler(new Event(MouseEvent.CLICK));
					}
				}
				
				refreshTimer = setInterval(refreshViewDisplay, 500);
				
			}

			protected function refreshViewDisplay():void {
				clearInterval(refreshTimer);
				unassessedTab.refreshTile(unassessedElosArray);
				poorTab.refreshTile(poorElosArray);
				fairTab.refreshTile(fairElosArray);
				goodTab.refreshTile(goodElosArray);
				excellentTab.refreshTile(excellentElosArray);
			}

		]]>
	</fx:Script>
	
	<s:VGroup id="tabBarContainer" left="15" right="15" top="0" bottom="15" gap="0" horizontalCenter="0" verticalCenter="0">
		<s:BorderContainer width="{tabsHolder.width}" minHeight="10" borderColor="{index.THEME_COL}">
			<s:HGroup left="2" top="2" right="2" bottom="2" verticalAlign="middle">
				<mx:Image source="{index.IMAGE_BASE_URL+'assets/images/inf.png'}" width="10" height="10" />
				<s:Label id="instruc" width="100%" height="13" text="{resourceManager.getString('resources', 'ELO_CAT')+': '+cat}" verticalAlign="middle" color="{index.THEME_COL}" />
			</s:HGroup>
		</s:BorderContainer>
		<mx:Spacer height="5" />
		<s:TabBar id="tabs" dataProvider="{tabsHolder}" width="100%" cornerRadius="0" color="#FFFFFF" skinClass="skins.CustomSparkTabBarSkin" />
		<mx:ViewStack id="tabsHolder" width="100%" height="100%" borderStyle="solid" creationPolicy="all" borderColor="#999999" dropShadowVisible="true">
			<local:tabsHolderContentItem id="unassessedTab" label="{resourceManager.getString('resources', 'TAB_UNASSESSED') +' ('+unassessedElos+')'}" width="100%" height="100%"/>
			<local:tabsHolderContentItem id="poorTab" label="{resourceManager.getString('resources', 'TAB_POOR') +' ('+poorElos+')'}" width="100%" height="100%" />
			<local:tabsHolderContentItem id="fairTab" label="{resourceManager.getString('resources', 'TAB_FAIR') +' ('+fairElos+')'}"  width="100%" height="100%" />
			<local:tabsHolderContentItem id="goodTab" label="{resourceManager.getString('resources', 'TAB_GOOD') +' ('+goodElos+')'}"  width="100%" height="100%" />
			<local:tabsHolderContentItem id="excellentTab" label="{resourceManager.getString('resources', 'TAB_EXCELLENT') +' ('+excellentElos+')'}" width="100%" height="100%" />
		</mx:ViewStack>
		<mx:Spacer height="5" />
	</s:VGroup>

</s:NavigatorContent>
