<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" showEffect="{fadeIn}" hideEffect="{zoomOut}" width="100%" height="100%" xmlns:local="*" creationPolicy="all">
	<fx:Declarations>
		<s:Sequence id="fadeIn">
			<s:Fade duration="1000" alphaFrom="0.0" alphaTo="1.0"/>
		</s:Sequence>
		<s:Sequence id="zoomOut" >
			<s:Fade duration="1000" alphaFrom="1.0" alphaTo="0.0"/>
		</s:Sequence>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import listeners.ToggleEvent;
			
			import mx.collections.ArrayCollection;
			
			public var elosArray:ArrayCollection;
			[Bindable] public var cat:String;
			
			private var selectedElo:Object;
			private var subCE:subCanvasElo;
			
			[Bindable] private var unassessedElos:Number;
			[Bindable] private var poorElos:Number;
			[Bindable] private var fairElos:Number;
			[Bindable] private var goodElos:Number;
			[Bindable] private var excellentElos:Number;
			
			public function refreshView():void {
				unassessedTab.naviContainer.removeAllElements();
				poorTab.naviContainer.removeAllElements();
				fairTab.naviContainer.removeAllElements();
				goodTab.naviContainer.removeAllElements();
				excellentTab.naviContainer.removeAllElements();
				
				unassessedElos = 0;
				poorElos = 0;
				fairElos = 0;
				goodElos = 0;
				excellentElos = 0;
				
				for(var i:Number = 0; i < elosArray.length; i++) {
					selectedElo = elosArray[i];
					subCE = new subCanvasElo();
					subCE.eloid = selectedElo.eloid;
					subCE.type = selectedElo.type;
					subCE.eloName = selectedElo.name;
					subCE.thumbnail = selectedElo.thumbnail;
					subCE.myname = selectedElo.myname;
					subCE.createdby = selectedElo.createdby;
					subCE.modified = selectedElo.modified;
					subCE.description = selectedElo.rDesc;
					subCE.glg = selectedElo.rGLG;
					subCE.slg = selectedElo.rSLG;
					subCE.reflection = selectedElo.rReflec;
					subCE.hasBeenReflectedOn = selectedElo.hasBeenReflectedOn;
					subCE.hasBeenSelectedForSubmit = selectedElo.hasBeenSelectedForSubmit;
					subCE.percentInquiry = selectedElo.percentInquiry;
					subCE.inquiryPic = selectedElo.inquiryPic;
					
					if(selectedElo.assessed.toString() == "true") {
						switch(selectedElo.grade.toString()) {
							case "poor":
								poorTab.addNewElo(subCE);
								poorElos++;
								break;
							case "fair":
								fairTab.addNewElo(subCE);
								fairElos++;
								break;
							case "good":
								goodTab.addNewElo(subCE);
								goodElos++;
								break;
							case "excellent":
								excellentTab.addNewElo(subCE);
								excellentElos++;
								break;
						}
					}
					else {
						unassessedTab.addNewElo(subCE);
						unassessedElos++;
					}
					
					if(selectedElo.shouldBeSelected) {
						subCE.compareCb.selected = selectedElo.shouldBeSelected;
						subCE.compareCb_changeHandler(new Event(MouseEvent.CLICK));
					}
					else {
						subCE.compareCb.selected = selectedElo.shouldBeSelected;
					}
					
				}
			}
		]]>
	</fx:Script>
	
	<s:VGroup id="tabBarContainer" left="15" right="15" top="0" bottom="15" gap="0" horizontalCenter="0" verticalCenter="0">
		<s:BorderContainer width="{tabsHolder.width}" minHeight="10" borderColor="{index.THEME_COL}">
			<s:HGroup left="2" top="2" right="2" bottom="2" verticalAlign="middle">
				<mx:Image source="assets/images/inf.png" width="10" height="10" />
				<s:Label id="instruc" width="100%" height="13" text="{resourceManager.getString('resources', 'ELO_CAT')+': '+cat}" verticalAlign="middle" color="{index.THEME_COL}" />
			</s:HGroup>
		</s:BorderContainer>
		<mx:Spacer height="5" />
		<s:TabBar id="tabs" dataProvider="{tabsHolder}" width="100%" cornerRadius="0" color="#FFFFFF" skinClass="skins.CustomSparkTabBarSkin" />
		<mx:ViewStack id="tabsHolder" width="100%" height="100%" borderStyle="solid" borderColor="#999999" creationPolicy="all" dropShadowVisible="true">
			<local:tabsHolderContentItem id="unassessedTab" label="{resourceManager.getString('resources', 'TAB_UNASSESSED') +' ('+unassessedElos+')'}" width="100%" height="100%" />
			<local:tabsHolderContentItem id="poorTab" label="{resourceManager.getString('resources', 'TAB_POOR') +' ('+poorElos+')'}" width="100%" height="100%" />
			<local:tabsHolderContentItem id="fairTab" label="{resourceManager.getString('resources', 'TAB_FAIR') +' ('+fairElos+')'}"  width="100%" height="100%" />
			<local:tabsHolderContentItem id="goodTab" label="{resourceManager.getString('resources', 'TAB_GOOD') +' ('+goodElos+')'}"  width="100%" height="100%" />
			<local:tabsHolderContentItem id="excellentTab" label="{resourceManager.getString('resources', 'TAB_EXCELLENT') +' ('+excellentElos+')'}" width="100%" height="100%" />
		</mx:ViewStack>
		<mx:Spacer height="5" />
	</s:VGroup>

</s:NavigatorContent>
