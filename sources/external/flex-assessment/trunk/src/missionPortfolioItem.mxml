<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%">
	
	<fx:Script>
		<![CDATA[
			import listeners.ToggleEvent;
			
			import mx.collections.ArrayCollection;
			
			[Bindable] public var allGood:Boolean = true;
			
			private var objectsToTile:ArrayCollection;
			private var studentName:String;
			
			public var studentIndex:Number;
			
			public function buildEloArray(xmlData:XML, studentName:String):Array {
				this.studentName = studentName;
				var counts:Array = new Array();
				var unassessedElos:Number = 0;
				var totElos:Number = 0;
				objectsToTile = new ArrayCollection();
				
//				for each (var object:XML in xmlData.elos.*) {
//					if (object.name() == "elo") {
//						totElos++;
//						tc = new tileCell();
//						tc.studentIndex = studentIndex;
//						tc.cellTitle = object.catname;
//						tc.cellAssess = parseStringToBool(object.assessed);
//						if(tc.cellAssess) {
//							unassessedElos++;
//						}
//						else {
//							allGood = false;							
//						}
//						tc.cellGrade = object.grade;
//						tc.eloid = object.uri;
//						objectsToTile.addItem(tc);
//					}
//				}
				
				var eloForCategory:XMLList;
				for(var i:Number = 1; i < index.obligElos.length; i++) {
					eloForCategory = xmlData.elos.elo.(catname == index.obligElos[i]);
					var eloXML:XML = eloForCategory[0] as XML;
					if(eloXML != null) {
						totElos++;
						var tc:tileCell = new tileCell();
						tc.studentIndex = studentIndex;
						tc.cellTitle = index.obligElos[i];
						tc.cellAssess = parseStringToBool(eloXML.assessed);
						if(tc.cellAssess) {
							unassessedElos++;
						}
						else {
							allGood = false;							
						}
						tc.cellGrade = eloXML.grade;
						tc.eloid = eloXML.uri;
						objectsToTile.addItem(tc);
					}
					else {
						var mtc:missingTileCell = new missingTileCell();
						mtc.studentIndex = studentIndex;
						mtc.cellTitle = index.obligElos[i];
						objectsToTile.addItem(mtc);
					}
					
				}
				
				counts.push(totElos);
				counts.push(unassessedElos);

				return counts;
			}
			
			private function buildTile():void {
				for each (var tcell:VGroup in objectsToTile) {
					dataTile.addElement(tcell);
				}
			}
			
			private function parseStringToBool( str:String ):Boolean {
				return Boolean( str == "true" );
			}
			
			protected function clickHandler(dir:String, stack:Number):void {
				var tEvent:ToggleEvent = new ToggleEvent(index.TOGGLE_COMMAND, true);
				tEvent.direction = dir;
				tEvent.selecTarget = stack;
				tEvent.portfolioToAssess = studentName;
				dispatchEvent(tEvent);
			}
		]]>
	</fx:Script>
	
	<s:VGroup width="100%" height="100%" horizontalAlign="center">
		<mx:Spacer height="10" />
		<s:Scroller width="{this.width-20}" height="100%">
			<s:VGroup id="grp" width="100%" height="100%" horizontalAlign="center" gap="0">
				<mx:Spacer height="5" />
				<s:TileGroup id="dataTile" width="{grp.width - 10}" horizontalCenter="0" verticalCenter="0" horizontalGap="20" verticalGap="20" creationComplete="buildTile()"/>
				<mx:Spacer height="5" />
			</s:VGroup>
		</s:Scroller>
		<s:HGroup id="assessFooter" width="100%" height="40" horizontalAlign="center" gap="10" verticalAlign="middle">
			<s:Button id="okAssess" enabled="{allGood}" color="#333333" label="{resourceManager.getString('resources', 'ASSESS_PORTFOLIO')}" click="clickHandler(index.LEFT_DIRECTION, index.STACK_PORTFOLIO_PANEL)" />
		</s:HGroup>
	</s:VGroup>
</s:NavigatorContent>
