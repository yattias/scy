<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" horizontalScrollPolicy="off" xmlns:containers="com.dougmccune.containers.*" verticalScrollPolicy="off">
	
	<fx:Script>
		<![CDATA[
			import listeners.ToggleEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			[Bindable] private var sendingLabel:String = "";
			[Bindable] private var sendButtonEnabled:Boolean = false;
			
			[Bindable] private var ref1Txt:String = "";
			[Bindable] private var ref2Txt:String = "";
			[Bindable] private var ref3Txt:String = "";

			protected function clickHandler(dir:String, stack:Number):void {
				var tEvent:ToggleEvent = new ToggleEvent(Main.TOGGLE_COMMAND, true);
				tEvent.eloToAdd = true;
				tEvent.eloSelectedToSubmit = true;
				tEvent.direction = dir;
				tEvent.selecTarget = stack;
				dispatchEvent(tEvent);
			}
			
			public function refreshView(finalArray:ArrayCollection):void {
				coverflow.removeAll();
				
				for(var i:Number=0; i<finalArray.length; i++) {
					var sub:subCanvasElo = finalArray[i];
					sub.highLightELO(false);
					sub.addEventListener(MouseEvent.MOUSE_OVER, showInfoBox);
					sub.addEventListener(MouseEvent.MOUSE_OUT, hideInfoBox);
					coverflow.addChild(sub);
					sub.box.setStyle("backgroundColor", Main.THEME_COL);
				}
				
				scrollbar.maxScrollPosition = coverflow.numChildren - 1;
				coverflow.selectedIndex = 0;
				
				
				var so:SharedObject = SharedObject.getLocal("scy-eportfolio");
				var currentELO:Object = new Object()
				currentELO = so.data.currentElo;
				sendingLabel = resourceManager.getString('resources', 'SENDING_LABEL')+": "+currentELO.obliElo;
			}
			
			protected function okSubmit_clickHandler(event:MouseEvent):void {
				Alert.show(resourceManager.getString('resources', 'ALERT_SUBMIT_TEXT'), resourceManager.getString('resources', 'ALERT_SUBMIT_TITLE'));
			}
			
			private function updateCoordinates(event:Event):void {
				if((mouseX + altBox.width) > this.width) {
					altBox.x = mouseX - 20 - altBox.width;
				}
				else {
					altBox.x = mouseX + 20;			
				}
				
				if((mouseY + altBox.height) > this.height) {
					altBox.y = mouseY - 20 - altBox.height;
				}
				else {
					altBox.y = mouseY + 20;
				}
			}
			
			
			protected function altBox_mouseOverHandler(event:MouseEvent):void {
				updateCoordinates(event);
			}
			
			private function showInfoBox(evt:MouseEvent):void {
				descriptionInfo.htmlText = "<u>"+resourceManager.getString('resources', 'DESCRIPTION') + "</u>: " +(evt.target).description;
				//glgInfo.htmlText = "<u>"+resourceManager.getString('resources', 'GLG') + "</u>: " +(evt.target).glg;
				var glgString:String = "<u>"+resourceManager.getString('resources', 'GLG') + "</u>: <br>";
				for(var i:Number = 0; i<(evt.target).glg.length; i++) {
					glgString = glgString + "     - " + ((evt.target).glg[i][0].entry).goal + "<br>";
				}
				glgInfo.htmlText = glgString;
				var slgString:String = "<u>"+resourceManager.getString('resources', 'SLG') + "</u>: <br>";
				for(var j:Number = 0; j<(evt.target).slg.length; j++) {
					slgString = slgString + "     - " + ((evt.target).slg[j][0].entry).goal + "<br>";
				}
				slgInfo.htmlText = slgString;
				reflectionInfo.htmlText = "<u>"+resourceManager.getString('resources', 'REFLECTION') + "</u>: " +(evt.target).reflection;
				reflectionInq.htmlText = "<u>"+resourceManager.getString('resources', 'REF_ON_INQ') + "</u>: " +(evt.target).percentInquiry;
				reflectionInqImg.source = (evt.target).inquiryPic;
				altBox.addEventListener(Event.ENTER_FRAME, updateCoordinates);
			}
			
			private function hideInfoBox(evt:MouseEvent):void {
				altBox.removeEventListener(Event.ENTER_FRAME, updateCoordinates);
				altBox.x = Main.ALT_BOX_INIT_X;
			}
			
			private function validateSubmitButton():void {
				if(ref1Txt != "" && ref2Txt != "" && ref3Txt != "") {
					sendButtonEnabled = true;
				}
				else {
					sendButtonEnabled = false;
				}
			}
		]]>
	</fx:Script>
	
	<mx:VBox width="100%" height="100%" horizontalAlign="center" horizontalScrollPolicy="off">
		<mx:HBox id="hbo" width="100%" height="70" horizontalAlign="center" verticalAlign="middle" horizontalGap="3">
			<s:BorderContainer id="headerLogo" width="70" height="70" borderStyle="solid" borderColor="{Main.THEME_COL}">
				<s:backgroundFill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="{Main.THEME_COL}" />
						<s:GradientEntry color="{Main.THEME_COL}" />
					</s:LinearGradient>
				</s:backgroundFill>
				
				<mx:Image source="assets/images/folder.png" width="60" height="60" left="5" top="5" />
			</s:BorderContainer>	
			<s:BorderContainer id="header" width="100%" height="70" borderStyle="solid" borderColor="{Main.THEME_COL}">
				<s:backgroundFill>
					<s:LinearGradient rotation="90">
						<s:GradientEntry color="{Main.THEME_COL}" />
						<s:GradientEntry color="{Main.THEME_COL}" />
					</s:LinearGradient>
				</s:backgroundFill>
				
				<mx:HBox width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
					<mx:Text id="headerText" width="60%" color="{Main.BACK_GRADIENT_BOT}" fontSize="15" fontAntiAliasType="advanced" textAlign="center" htmlText="{resourceManager.getString('resources', 'SENDING_HEADER')}" />
				</mx:HBox>
			</s:BorderContainer>	
		</mx:HBox>
		<s:BorderContainer width="{hbo.width}" minHeight="10">
			<s:HGroup left="2" top="2" right="2" bottom="2" verticalAlign="middle">
				<mx:Image source="assets/images/inf.png" width="10" height="10" />
				<s:Label id="instruc" width="100%" height="13" text="{resourceManager.getString('resources', 'SENDING_INSTRUC')}" verticalAlign="middle" />
			</s:HGroup>
		</s:BorderContainer>
		<mx:Spacer height="3" />
		<mx:VBox width="100%" height="100%" horizontalAlign="center" verticalGap="0">
			<mx:Panel title="{sendingLabel}" id="blog" horizontalAlign="left" height="280" width="90%">
				<containers:CoverFlowContainer id="coverflow" width="100%" height="100%" 
											   horizontalGap="40" borderStyle="none" backgroundColor="{Main.BACK_GRADIENT_BOT}"
											   segments="10" reflectionEnabled="true" />            
				<mx:HScrollBar id="scrollbar" width="100%" pageSize="1" styleName="myScrollBar" scrollPosition="{coverflow.selectedIndex}" 
							   scroll="coverflow.selectedIndex = Math.round(scrollbar.scrollPosition)" />
			</mx:Panel>
			<mx:Spacer height="10" />
			<mx:VBox id="ref" height="100%" width="90%" verticalGap="0">
				<mx:Spacer height="15" />
				<s:TabBar id="tabs" dataProvider="{vs}" width="100%" cornerRadius="0"/>
				<mx:ViewStack id="vs" width="100%" height="100%" borderStyle="solid" borderColor="#999999" dropShadowVisible="true">
					<s:NavigatorContent label="{resourceManager.getString('resources', 'REFLECTION_TXT1')}" width="100%" height="100%">
						<mx:HBox width="100%" height="90%" verticalAlign="middle" horizontalAlign="center">
							<mx:FormItem label="{resourceManager.getString('resources', 'REFLECTION_TXT1')+':'}" required="true" height="90%">
								<mx:Text text="{resourceManager.getString('resources', 'SENDING_TEXT1')}" width="500" />
								<s:TextArea width="500" height="90%" id="reflectionArea1" color="#000000" change="ref1Txt=reflectionArea1.text;validateSubmitButton()" />
							</mx:FormItem>
						</mx:HBox>
					</s:NavigatorContent>
					<s:NavigatorContent label="{resourceManager.getString('resources', 'REFLECTION_TXT2')}" width="100%" height="100%" >
						<mx:HBox width="100%" height="90%" verticalAlign="middle" horizontalAlign="center">
							<mx:FormItem label="{resourceManager.getString('resources', 'REFLECTION_TXT2')+':'}" required="true" height="90%">
								<mx:Text text="{resourceManager.getString('resources', 'SENDING_TEXT2')}" width="500" />
								<s:TextArea width="500" height="90%" id="reflectionArea2" color="#000000" change="ref2Txt=reflectionArea2.text;validateSubmitButton()" />
							</mx:FormItem>					
						</mx:HBox>
					</s:NavigatorContent>
					<s:NavigatorContent label="{resourceManager.getString('resources', 'REFLECTION_TXT3')}"  width="100%" height="100%">
						<mx:HBox width="100%" height="90%" verticalAlign="middle" horizontalAlign="center">
							<mx:FormItem label="{resourceManager.getString('resources', 'REFLECTION_TXT3')+':'}" required="true" height="90%">
								<mx:Text text="{resourceManager.getString('resources', 'SENDING_TEXT3')}" width="500" />
								<s:TextArea width="500" height="90%" id="reflectionArea3" color="#000000" change="ref3Txt=reflectionArea3.text;validateSubmitButton()"/>
							</mx:FormItem>					
						</mx:HBox>
					</s:NavigatorContent>
					<s:NavigatorContent label="{resourceManager.getString('resources', 'REFLECTION_TXT4')}" width="100%" height="100%" >
						<mx:VBox width="100%" height="90%" verticalAlign="middle" horizontalAlign="center">
							<mx:VBox verticalGap="0" horizontalCenter="0">
								<mx:Text id="refOnInqText" text="{Main.REF_ON_INQ_TXT}" width="400" />
								<mx:HBox width="400" height="33" horizontalGap="{(400-4*30)/3}">
									<mx:Image source="assets/images/emoticons/1.png" width="30" height="33" />
									<mx:Image source="assets/images/emoticons/2.png" width="30" height="33" />
									<mx:Image source="assets/images/emoticons/3.png" width="30" height="33" />
									<mx:Image source="assets/images/emoticons/4.png" width="30" height="33" />
								</mx:HBox>
								<mx:HSlider id="refOnInqTextSlider" minimum="1" maximum="4" value="2" dataTipPlacement="top" tickColor="0x323232"
											snapInterval="1" tickInterval="1" allowTrackClick="true" width="400" showDataTip="false"/>
							</mx:VBox>
						</mx:VBox>
					</s:NavigatorContent>
				</mx:ViewStack>
			</mx:VBox>
		</mx:VBox>
		
		<mx:HBox id="submitFooter" width="100%" height="40" horizontalAlign="center" horizontalGap="10" verticalAlign="middle">
			<s:Button id="okSubmit" label="{resourceManager.getString('resources', 'SEND_BUTTON')}" enabled="{sendButtonEnabled}" click="okSubmit_clickHandler(event)" />
			<s:Button id="backSubmit" label="{resourceManager.getString('resources', 'BACK_BUTTON')}" click="clickHandler(Main.RIGHT_DIRECTION, Main.STACK_SUBMIT_PANEL)" />
		</mx:HBox>
	</mx:VBox>	
	
	<s:BorderContainer id="altBox" width="300" x="{Main.ALT_BOX_INIT_X}" cornerRadius="5" borderWeight="2" borderColor="{Main.THEME_COL}" dropShadowVisible="true" backgroundColor="{Main.BACK_GRADIENT_TOP}" alpha=".9" mouseOver="altBox_mouseOverHandler(event)">
		<mx:VBox left="3" right="3" height="100%" verticalGap="2" color="#333333">
			<mx:Text id="descriptionInfo" width="100%" />
			<mx:Text id="glgInfo" width="100%" />
			<mx:Text id="slgInfo" width="100%" />
			<mx:Text id="reflectionInfo" width="100%" />
			<mx:HBox width="100%" verticalAlign="middle" right="3">
				<mx:Text id="reflectionInq" width="100%" />
				<mx:Image id="reflectionInqImg" width="30" height="33" />
			</mx:HBox>
		</mx:VBox>
	</s:BorderContainer>
	
</mx:Canvas>
