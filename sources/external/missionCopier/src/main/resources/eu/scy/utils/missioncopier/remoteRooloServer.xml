<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName">

	<alias name="httpInvokerRepositoryProxy" alias="remoteRepository" />

	<!-- Resolves ${...} placeholders from client.properties -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesMode" value="2"/>
		<property name="location">
			<value>/eu/scy/utils/missioncopier/client.properties</value>
		</property>
	</bean>

    <!-- Proxy for the HTTP-invoker-exported repository -->
    <!-- Spring's HTTP invoker uses Java serialization via HTTP  -->
    <bean id="httpInvokerRepositoryProxy" class="org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean">
        <property name="serviceUrl">
            <value>http://${serverName}:${httpPort}${contextPath}/remoting/repository-httpinvoker</value>
        </property>
        <property name="serviceInterface">
            <value>roolo.api.IRepository</value>
        </property>
        <!--
        Comment the following in to use Apache Commons HttpClient instead of the JDK's
        standard HttpURLConnection (as used by the default SimpleHttpInvokerRequestExecutor).
        -->
        <!--
        <property name="httpInvokerRequestExecutor">
            <bean class="org.springframework.remoting.httpinvoker.CommonsHttpInvokerRequestExecutor"/>
        </property>
         -->
    </bean>

</beans>
