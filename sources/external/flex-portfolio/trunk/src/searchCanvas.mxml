<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
		   xmlns:s="library://ns.adobe.com/flex/spark" 
		   xmlns:mx="library://ns.adobe.com/flex/mx" >
	
	<fx:Declarations>
		<s:HTTPService id="launchSearch" 
					   showBusyCursor="true" 
					   result="launchSearch_resultHandler(event)" 
					   fault="launchSearch_faultHandler(event)"
					   resultFormat="e4x"/>
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import listeners.ToggleEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.ItemClickEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.RadioButtonGroup;
			import spark.primitives.Ellipse;
			
			import utils.AutoSaveService;
			import utils.XMLUtilJer;
			
			[Bindable] private var addEloFlag:Boolean = false;
			[Bindable] private var foundElosArray:ArrayCollection;
			
			private var so:SharedObject;
			private var rg:RadioButtonGroup;
			private var currentEloCategory:Object
			
			[Bindable] private var eloss:ArrayCollection;
			
			protected function clickHandler(dir:String, stack:Number):void {
				var sLogger:Dictionary = new Dictionary();
				sLogger["tool"] = index.SHAREDOBJECT_LOCAL_NAME;
				var attribs:ArrayCollection = new ArrayCollection();
				if(dir == index.LEFT_DIRECTION) {
					so = SharedObject.getLocal(index.SHAREDOBJECT_LOCAL_NAME);
					so.data.searchSelection = foundElosArray[rg.selectedValue];
					so.flush();
					sLogger["type"] = "add_elo_to_portfolio_button_pressed";
					var ob:Object = new Object();
					ob.oName = "eloSelected";
					ob.oVal = foundElosArray[rg.selectedValue].uri.toString();
					attribs.addItem(ob);
				}
				else {
					sLogger["type"] = "cancel_search_button_pressed";
				}
				
				var tEvent:ToggleEvent = new ToggleEvent(index.TOGGLE_COMMAND, true);
				tEvent.direction = dir;
				tEvent.selecTarget = stack;
				dispatchEvent(tEvent);
				
				sLogger["elouri"] = new String(FlexGlobals.topLevelApplication.parameters.missionURI);
				var ass:AutoSaveService = new AutoSaveService(so.data.actionlogger, null, null, XMLUtilJer.getXMLActionLoggerObject(sLogger, attribs));
				//ass.sendTheMofo();
			}

			protected function radioGroup_itemClickHandler(event:ItemClickEvent):void {
				addEloFlag = true;
			}
			
			public function refreshContent(newSearch:Boolean, elosearchservice:String):void {
				so = SharedObject.getLocal(index.SHAREDOBJECT_LOCAL_NAME);

				var sLogger:Dictionary = new Dictionary();
				sLogger["tool"] = index.SHAREDOBJECT_LOCAL_NAME;
				sLogger["type"] = "search_for_elos_started";
				sLogger["elouri"] = new String(FlexGlobals.topLevelApplication.parameters.missionURI);
				var ass:AutoSaveService = new AutoSaveService(so.data.actionlogger, null, null, XMLUtilJer.getXMLActionLoggerObject(sLogger, null));
				//ass.sendTheMofo();
				
				currentEloCategory = so.data.currentEloCategory;
				searchString.htmlText = "<u>"+resourceManager.getString('resources', 'SEARCH_LABEL')+"</u>: "+currentEloCategory.obliElo;
				
				if(newSearch) {
					addEloFlag = false;
					eloss = new ArrayCollection();
					searchTile.removeAllElements();
					launchSearch.url = elosearchservice+"?missionURI="+decodeURI(new String(FlexGlobals.topLevelApplication.parameters.missionURI)).replace("#", "%23")+"&searchCategory="+encodeURI(currentEloCategory.obliElo);
					if(FlexGlobals.topLevelApplication.url.indexOf("file:///") > -1 || FlexGlobals.topLevelApplication.url.indexOf("www-data-public") > -1) {
						launchSearch.url = new String(elosearchservice).substring(1)+"?missionURI="+decodeURI(new String(FlexGlobals.topLevelApplication.parameters.missionURI)).replace("#", "%23")+"&searchCategory="+encodeURI(currentEloCategory.obliElo);
					}

					launchSearch.send();
				}
			}
			
			private function buildSearchResult():void {
				var subCE:subCanvasElo;
				rg = new RadioButtonGroup();
				rg.addEventListener(ItemClickEvent.ITEM_CLICK, radioGroup_itemClickHandler);
				
				for(var i:Number = 0;i < eloss.length; i++) {
					var subCE:subCanvasElo = XMLUtilJer.getSubCanvasEloFromObject(eloss[i]);
					var selecCol:selectableThumb = new selectableThumb();
					searchTile.addElement(selecCol);	
					
					selecCol.selectableGRP.addElementAt(subCE, 0);
					selecCol.rb.group = rg;
					selecCol.rb.value = i;
					selecCol.rb.visible = !subCE.hasbeenreflectedon;
				}
			}


			protected function launchSearch_resultHandler(event:ResultEvent):void {
				var xml:XML= event.result as XML;
				var xmlObject:Object;
				foundElosArray = new ArrayCollection();
				
				for each (var object:XML in xml.*) {
					if (object.name() == "elo" && object.catname == currentEloCategory.obliElo) {
						xmlObject = XMLUtilJer.getXMLAsEloObject(object);
						xmlObject.isSelected = false;
						
						if(xmlObject.thumbnail == null ||Â xmlObject.thumbnail == "") {
							xmlObject.thumbnail = index.NOTHUMB;
							object.thumbnail = index.NOTHUMB;
						}
						
						eloss.addItem(xmlObject);
						foundElosArray.addItem(object);
					}
				}
				
				buildSearchResult();
			}


			protected function launchSearch_faultHandler(event:FaultEvent):void {
				Alert.show(resourceManager.getString('resources', 'SEARCH_PROPERTY_FILE_ERROR'), resourceManager.getString('resources', 'HTTP_SERVICE_ERROR'));
			}

		]]>
	</fx:Script>

	<s:VGroup width="100%" height="100%">
	 	<s:VGroup id="searchBox" width="100%" height="100%" horizontalAlign="center">
			<s:HGroup id="hbo" width="100%" height="70" horizontalAlign="center" verticalAlign="middle" gap="3">
				<s:BorderContainer id="headerLogo" width="70" height="70" borderStyle="solid" borderColor="{index.THEME_COL}">
					<s:backgroundFill>
						<s:LinearGradient rotation="90">
							<s:GradientEntry color="{index.THEME_COL}" />
							<s:GradientEntry color="{index.THEME_COL}" />
						</s:LinearGradient>
					</s:backgroundFill>
					
					<s:Image source="{index.IMAGE_BASE_URL+'assets/images/folder.png'}" width="60" height="60" left="5" top="5" />
				</s:BorderContainer>	
				<s:BorderContainer id="header" width="100%" height="70" borderStyle="solid" borderColor="{index.THEME_COL}">
					<s:backgroundFill>
						<s:LinearGradient rotation="90">
							<s:GradientEntry color="{index.THEME_COL}" />
							<s:GradientEntry color="{index.THEME_COL}" />
						</s:LinearGradient>
					</s:backgroundFill>
					
					<s:HGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="middle">
						<s:Label id="headerText" width="60%" color="{index.BACK_GRADIENT_BOT}" fontSize="15" textAlign="center" text="{resourceManager.getString('resources', 'SEARCH_RESULT_HEADER')}" />
					</s:HGroup>
				</s:BorderContainer>	
			</s:HGroup>
			
			<s:BorderContainer width="{hbo.width}" minHeight="10">
				<s:HGroup left="2" top="2" right="2" bottom="2" verticalAlign="middle">
					<s:Image source="{index.IMAGE_BASE_URL+'assets/images/inf.png'}" width="10" height="10" />
					<s:Label id="instruc" width="100%" height="13" text="{resourceManager.getString('resources', 'SEARCH_RESULT_INSTRUC')}" verticalAlign="middle" />
				</s:HGroup>
			</s:BorderContainer>
			<mx:Spacer height="3" />
			<mx:Text width="{this.width-20}" height="30" id="searchString" color="{index.THEME_COL}" />
			
			<s:Scroller width="{this.width-20}" height="100%">
				<s:VGroup id="grp" width="100%" height="100%" horizontalAlign="center" gap="0">
					<mx:Spacer height="5" />
					<s:TileGroup id="searchTile" width="{grp.width - 10}" horizontalCenter="0" verticalCenter="0" horizontalGap="25" verticalGap="20"/>
					<mx:Spacer height="5" />
				</s:VGroup>
			</s:Scroller>
			<mx:Spacer height="10" />
		</s:VGroup>
		<s:HGroup id="searchFooter" width="100%" height="40" horizontalAlign="center" gap="10" verticalAlign="middle">
			<s:Button id="okSearch" label="{resourceManager.getString('resources', 'ADD_EPORTFOLIO_BUTTON')}" enabled="{addEloFlag}" click="clickHandler(index.LEFT_DIRECTION, index.STACK_REFLEC_PANEL)" />
			<s:Button id="cancelSearch" label="{resourceManager.getString('resources', 'CANCEL_BUTTON')}" click="clickHandler(index.RIGHT_DIRECTION, index.STACK_INTRO_PANEL)" />
		</s:HGroup>
	</s:VGroup>	
</s:NavigatorContent>
