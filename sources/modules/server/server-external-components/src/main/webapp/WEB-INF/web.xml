<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
        "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

    <display-name>SCY-External-components</display-name>

    <distributable/>


    <!-- Context Configuration locations for Spring XML files -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/applicationcontext-externalcomponents.xml,
            /WEB-INF/agents.xml,
            classpath:eu/scy/server/pedagogicalplan/applicationContext-pedagogicalPlanService.xml,
            classpath:eu/scy/core/applicationContext-service.xml,
            classpath:eu/scy/core/persistence/hibernate/applicationContext-dao.xml,
            /WEB-INF/applicationContext-hibernate.xml,
            <!--  /WEB-INF/dataGenerator.xml,-->
            /WEB-INF/remoteRooloConfig.xml,
            classpath:co2-mission-map.xml
        </param-value>
    </context-param>

    <!--listener>
        <listener-class>
            eu.scy.server.listeners.ConfigurationOverrider
        </listener-class>
    </listener-->


    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <filter>
        <filter-name>hibernateFilter</filter-name>
        <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
    </filter>


    <!-- The 'hibernateFilter', a.k.a. Spring's OpenSessionInViewFilter
     guarantees one session per request.  Performance seems to be the
     same if it's enabled or disabled. -->

    <filter-mapping>
        <filter-name>hibernateFilter</filter-name>
        <url-pattern>/webapp/*</url-pattern>
    </filter-mapping>

	<servlet>
		<servlet-name>JnlpDownloadServlet</servlet-name>
		<servlet-class>jnlp.sample.servlet.JnlpDownloadServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>JnlpDownloadServlet</servlet-name>
		<url-pattern>*.jnlp</url-pattern>
	</servlet-mapping>

    <!--servlet>
        <servlet-name>remoting</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet-->

    <servlet>
        <servlet-name>remoting</servlet-name>
        <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
        </servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

   <!--
      - Dispatcher servlet mapping for HTTP remoting via Hessian, Burlap, and
      - Spring's HTTP invoker (see remoting-servlet.xml for the controllers).
   -->
   <servlet-mapping>
      <servlet-name>remoting</servlet-name>
      <url-pattern>/remoting/*</url-pattern>
   </servlet-mapping>


    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>

    <!--
     To specify mime mappings, create a file named mime-mappings.xml, put it in your project's mergedir.
     Organize mime-mappings.xml following this DTD slice:

     <!ELEMENT mime-mapping (extension, mime-type)>
    -->

    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
        <welcome-file>t-app</welcome-file>
    </welcome-file-list>

    <resource-ref>
        <description>DB Connection</description>
        <res-ref-name>jdbc/sail_database</res-ref-name>
        <res-type>javax.sql.DataSource</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>


</web-app>
