/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PrintDialog.java
 *
 * Created on 14 sept. 2009, 09:36:02
 */

package eu.scy.tools.dataProcessTool.print;

import eu.scy.tools.dataProcessTool.common.Dataset;
import eu.scy.tools.dataProcessTool.common.Visualization;
import eu.scy.tools.dataProcessTool.dataTool.DataProcessToolPanel;
import eu.scy.tools.dataProcessTool.dataTool.FitexToolPanel;
import eu.scy.tools.dataProcessTool.utilities.MyUtilities;
import java.util.ArrayList;
import javax.swing.BoxLayout;
import javax.swing.JCheckBox;

/**
 * print dialog
 * @author Marjolaine
 */
public class PrintDialog extends javax.swing.JDialog {

    private FitexToolPanel fitex;
    private Dataset dataset;
    private ArrayList<JCheckBox> listCb;

    public PrintDialog(FitexToolPanel fitex, Dataset dataset) {
        super();
        this.fitex = fitex;
        this.dataset = dataset;
        this.listCb = new ArrayList();
        initComponents();
        setLocationRelativeTo(fitex);
        setModal(true);
        setResizable(false);
        initGUI();
    }



    /** Creates new form PrintDialog */
    public PrintDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelExport = new javax.swing.JLabel();
        cbDataset = new javax.swing.JCheckBox();
        cbGraph = new javax.swing.JCheckBox();
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        panelGraph = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(fitex.getBundleString("TITLE_DIALOG_PRINT"));
        setMinimumSize(new java.awt.Dimension(220, 200));
        setModal(true);
        setResizable(false);

        labelExport.setFont(new java.awt.Font("Tahoma", 1, 11));
        labelExport.setText(fitex.getBundleString("LABEL_EXPORT_PDF"));

        cbDataset.setFont(new java.awt.Font("Tahoma", 1, 11));
        cbDataset.setSelected(true);
        cbDataset.setText(fitex.getBundleString("LABEL_PRINT_DATASHEET"));

        cbGraph.setFont(new java.awt.Font("Tahoma", 1, 11));
        cbGraph.setSelected(true);
        cbGraph.setText(fitex.getBundleString("LABEL_PRINT_GRAPH"));
        cbGraph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbGraphActionPerformed(evt);
            }
        });

        buttonOk.setText(fitex.getBundleString("BUTTON_OK"));
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        buttonCancel.setText(fitex.getBundleString("BUTTON_CANCEL"));
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGraphLayout = new javax.swing.GroupLayout(panelGraph);
        panelGraph.setLayout(panelGraphLayout);
        panelGraphLayout.setHorizontalGroup(
            panelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 208, Short.MAX_VALUE)
        );
        panelGraphLayout.setVerticalGroup(
            panelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 39, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(panelGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelExport))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDataset)
                            .addComponent(cbGraph)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(buttonOk)
                        .addGap(18, 18, 18)
                        .addComponent(buttonCancel)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelExport)
                .addGap(18, 18, 18)
                .addComponent(cbDataset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cbGraph)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelGraph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancel))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
        validDialog();
    }//GEN-LAST:event_buttonOkActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void cbGraphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbGraphActionPerformed
        clickAllGraphs();
    }//GEN-LAST:event_cbGraphActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PrintDialog dialog = new PrintDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonOk;
    private javax.swing.JCheckBox cbDataset;
    private javax.swing.JCheckBox cbGraph;
    private javax.swing.JLabel labelExport;
    private javax.swing.JPanel panelGraph;
    // End of variables declaration//GEN-END:variables

    private void initGUI(){
       this.labelExport.setSize(MyUtilities.lenghtOfString(this.labelExport.getText(), getFontMetrics(this.labelExport.getFont())), this.labelExport.getHeight());
       this.cbDataset.setSize(MyUtilities.lenghtOfString(this.cbDataset.getText(), getFontMetrics(this.cbDataset.getFont())), this.cbDataset.getHeight());
       this.cbGraph.setSize(MyUtilities.lenghtOfString(this.cbGraph.getText(), getFontMetrics(this.cbGraph.getFont())), this.cbGraph.getHeight());
       // bouton Ok
       this.buttonOk.setSize(60+MyUtilities.lenghtOfString(this.buttonOk.getText(), getFontMetrics(this.buttonOk.getFont())), this.buttonOk.getHeight());
       // bouton Annuler
       this.buttonCancel.setSize(60+MyUtilities.lenghtOfString(this.buttonCancel.getText(), getFontMetrics(this.buttonCancel.getFont())), this.buttonCancel.getHeight());
       // liste des graphes
       int nb = dataset.getListVisualization().size();
       panelGraph.setLayout(new BoxLayout(panelGraph, BoxLayout.Y_AXIS));
       int max = 0;
       for (int i=0; i<nb; i++){
           JCheckBox cb = new JCheckBox(dataset.getListVisualization().get(i).getName(), true);
           cb.setName("cb"+i);
           cb.setSize(MyUtilities.lenghtOfString(cb.getText(), getFontMetrics(cb.getFont())), cb.getHeight());
           max = Math.max(max, cb.getWidth());
           cb.setFont(new java.awt.Font("Tahoma", 1, 11));
           panelGraph.add(cb);
           listCb.add(cb);
           cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                controlGraphSelection();
            }
        });
       }
       panelGraph.setSize(max+20, nb*30);
       panelGraph.revalidate();
       int width = panelGraph.getX()+max+70;
       width = Math.max(width, 200);
       this.buttonOk.setBounds(width/3, panelGraph.getY()+panelGraph.getHeight()+20, buttonOk.getWidth(), buttonOk.getHeight());
       this.buttonCancel.setBounds(width-(width/3)-buttonCancel.getWidth(), buttonOk.getY(), buttonCancel.getWidth(), buttonCancel.getHeight());
       this.setSize(width, this.buttonOk.getY()+this.buttonOk.getHeight()+30);
       setPreferredSize(getSize());
    }

    private void clickAllGraphs(){
        int nb = listCb.size();
        for (int i=0; i<nb; i++){
            listCb.get(i).setSelected(cbGraph.isSelected());
        }
    }

    private void controlGraphSelection(){
        boolean allSel = true;
        int nb = listCb.size();
        for (int i=0; i<nb; i++){
            if (!listCb.get(i).isSelected()){
                allSel = false;
            }
        }
        this.cbGraph.setSelected(allSel);
    }

    private void validDialog(){
        boolean printDatasheet = cbDataset.isSelected();
        ArrayList<Visualization> listVisToPrint = new ArrayList();
        int nb = listCb.size();
        for (int i=0; i<nb; i++){
            if(listCb.get(i).isSelected()){
                listVisToPrint.add(dataset.getListVisualization().get(i));
            }
        }
        boolean isOk = fitex.printFitex(printDatasheet, listVisToPrint);
        if(isOk)
            this.dispose();
    }
}
