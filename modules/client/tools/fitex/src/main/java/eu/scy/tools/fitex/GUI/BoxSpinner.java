/*
 * BoxSpinner.java
 *
 * Created on 3 juin 2007, 18:01
 */

package eu.scy.tools.fitex.GUI;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author  Cedric
 */
public class BoxSpinner extends javax.swing.JPanel {
    
    MainInterface pere ;
    private Double value ;
    private double step = 0.1 ;
    
    /** Creates new form BoxSpinner */
    public BoxSpinner(MainInterface pere) {
        this.pere = pere ;
        initComponents();
    }
       
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        champValeur = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        next = new javax.swing.JButton();
        previous = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        label.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        label.setText("jLabel1");
        label.setMinimumSize(new java.awt.Dimension(3, 14));
        add(label);

        jPanel2.setMaximumSize(new java.awt.Dimension(2, 2));
        jPanel2.setPreferredSize(new java.awt.Dimension(2, 2));

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 2, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 2, Short.MAX_VALUE)
        );

        add(jPanel2);

        champValeur.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        champValeur.setText("jTextField1");
        champValeur.setMinimumSize(new java.awt.Dimension(6, 18));
        champValeur.setPreferredSize(new java.awt.Dimension(70, 18));
        champValeur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                champValeurActionPerformed(evt);
            }
        });
        add(champValeur);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        next.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/up.gif"))); // NOI18N
        next.setDoubleBuffered(true);
        next.setFocusPainted(false);
        next.setIconTextGap(10);
        next.setMargin(new java.awt.Insets(0, 0, 0, 0));
        next.setMaximumSize(new java.awt.Dimension(15, 9));
        next.setMinimumSize(new java.awt.Dimension(15, 9));
        next.setPreferredSize(new java.awt.Dimension(16, 9));
        next.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/up.gif"))); // NOI18N
        next.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                nextMousePressed(evt);
            }
        });
        jPanel1.add(next);

        previous.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dn.gif"))); // NOI18N
        previous.setFocusPainted(false);
        previous.setMargin(new java.awt.Insets(0, 0, 0, 0));
        previous.setMaximumSize(new java.awt.Dimension(15, 9));
        previous.setMinimumSize(new java.awt.Dimension(15, 9));
        previous.setPreferredSize(new java.awt.Dimension(16, 9));
        previous.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/dn.gif"))); // NOI18N
        previous.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                previousMousePressed(evt);
            }
        });
        jPanel1.add(previous);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents

    private void previousMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousMousePressed
        value = value - step ;
        majParametre() ;
    }//GEN-LAST:event_previousMousePressed

    private void nextMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextMousePressed
        value = value + step ;
        majParametre() ;
    }//GEN-LAST:event_nextMousePressed

    private void champValeurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_champValeurActionPerformed
        try {
            value = Double.parseDouble(champValeur.getText()) ;
            pere.maJParametreDansFonction(label.getText(), value);
            majStep(champValeur.getText());
        } catch (NumberFormatException e) {
            System.out.println("Le nombre entr� n'est pas reconnu.");
            JOptionPane.showMessageDialog(this, "Le param�tre que vous indiquez n'est pas reconnu comme �tant un nombre.");
        } 
    }//GEN-LAST:event_champValeurActionPerformed
    
    public void majParametre (){
        NumberFormat nfE = NumberFormat.getNumberInstance(Locale.ENGLISH);
        DecimalFormat formatE = (DecimalFormat)nfE;
        formatE.applyPattern("0.######E0");
        NumberFormat nf = NumberFormat.getNumberInstance(Locale.ENGLISH);
        DecimalFormat format = (DecimalFormat)nf;
        format.applyPattern("###.#####");
        if (value>-1E-16 && value<1E-16) champValeur.setText("0");
        else if ((value>-0.09999 && value<0.099999) || value>=1E6 || value<=-1E6)
            champValeur.setText(formatE.format(value));
        else
            champValeur.setText(format.format(value));
        pere.maJParametreDansFonction(label.getText(), value);
    }
    
    /** fonction appel�e uniquement lors de l'affichage ou du reaffichage du box
     */
    public void setValue(double val) {
        value= val ;
        majParametre() ;
    }
   
    public void setTextLabel(String nomParam){
        label.setText(nomParam) ;
    }
    
    /** Modifie la valeur du pas d'incrementation en fonction de la valeur du nombre du Spinner
     *  cette fonction est appel�e � chaque fois (spinner.getModel ?) que l'utilisateur modifie � la main
     *  la valeur du nombre dans l'editor du spinner (spinner.getEditor) 
     */
    public void majStep(String nombre){
        
        // d�termine l'ordre de la derni�re d�cimale
        int ordre = 0 ;
        
        int placeDuE = nombre.indexOf('E') ;
        if (placeDuE == -1) placeDuE = nombre.indexOf('e') ;
        int placeDuPt = nombre.indexOf('.') ;
        
        // cas des nombres avec exposant
        if (placeDuE >= 0) {
            String exp = nombre.substring(placeDuE+1) ;
            ordre = Integer.parseInt(exp) ;
        }
        // cas des nbs a virgule
        if (placeDuPt >=0){
            if (placeDuE >= 0) ordre = ordre + placeDuPt - placeDuE + 1 ;
            else ordre = ordre - nombre.length()+ placeDuPt + 1 ;
        }
        step = Math.pow(10,ordre);
        System.out.println(step);
    }
    
    public int getHauteur(){
        // impossible de trouver le moyen d'obtenir automatiquement la hauteur de ce JSpinner
        // donc je la fixe a la main => problemes possibles d'affichage suivant les config...
        int height = 23 ;
        //height=champValeur.getHeight() ;
        System.out.println("height = "+ height);
        return height ;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField champValeur;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label;
    private javax.swing.JButton next;
    private javax.swing.JButton previous;
    // End of variables declaration//GEN-END:variables
    
}
