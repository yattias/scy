<?xml version="1.0" encoding="UTF-8"?>
<!-- You may freely edit this file. See commented blocks below for -->
<!-- some examples of how to customize the build. -->
<!-- (If you delete it and reopen the project it will be recreated.) -->
<project name="fx-youtuber" default="default" basedir="." xmlns:artifact="urn:maven-artifact-ant">
    <description>Builds, tests, and runs the project fx-youtuber.</description>
    <import file="nbproject/build-impl.xml"/>
    
    <path id="maven-ant-tasks.classpath" path="nbproject/maven-ant-tasks-2.0.10.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
           classpathref="maven-ant-tasks.classpath" />

    <target name="-maven-retrieve">
        <artifact:pom file="${basedir}/pom.xml" id="maven.project"/>
        <artifact:dependencies fileSetId="maven-ant-tasks.dependency.fileset">
              <pom refid="maven.project"/>
        </artifact:dependencies>
        <pathconvert property="maven-ant-tasks.dependency.path" dirsep="/" pathsep=":">
            <path>
                <fileset refid="maven-ant-tasks.dependency.fileset"/>
            </path>
        </pathconvert>
        <propertyfile file="nbproject/project.properties">
            <entry operation="=" key="maven.dependency.classpath" value="${maven-ant-tasks.dependency.path}"/>
        </propertyfile>
    </target>
    
    <!-- do the maven pom to nb config files and lib before compiling -->
    <!--
    <target name="-pre-compile" depends="-maven-retrieve"/>
    <target name="-pre-compile-single" depends="-maven-retrieve"/>
    -->

    <!-- do the maven pom to nb config files and lib updates after the clean -->
    <target name="-post-clean" depends="-maven-retrieve"/>

    <!--

    There exist several targets which are by default empty and which can be 
    used for execution of your tasks. These targets are usually executed 
    before and after some main targets. They are: 

      -pre-init:                 called before initialization of project properties
      -post-init:                called after initialization of project properties
      -pre-compile:              called before compilation
      -post-compile:             called after compilation
      -post-clean:               called after cleaning build products

    (Targets beginning with '-' are not intended to be called on their own.)

    Example of inserting an obfuscator after compilation could look like this:

        <target name="-post-compile">
            <obfuscate>
                <fileset dir="${build.classes.dir}"/>
            </obfuscate>
        </target>

    For list of available properties check the imported 
    nbproject/build-impl.xml file. 

    An example of overriding the target for project execution could look like this:

        <target name="run" depends="fx-youtuber-impl.jar">
            <exec dir="bin" executable="launcher.exe">
                <arg file="${dist.jar}"/>
            </exec>
        </target>

    Notice that the overridden target depends on the jar target and not only on 
    the compile target as the regular run target does. Again, for a list of available 
    properties which you can use, check the target you are overriding in the
    nbproject/build-impl.xml file. 

    -->
</project>
